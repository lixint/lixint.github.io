<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LixT&#39;s Blog</title>
  
  <subtitle>不务正业的日子</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.lixint.me/"/>
  <updated>2018-12-22T13:01:16.062Z</updated>
  <id>https://www.lixint.me/</id>
  
  <author>
    <name>LixT</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Markdown入门教程</title>
    <link href="https://www.lixint.me/markdown.html"/>
    <id>https://www.lixint.me/markdown.html</id>
    <published>2018-12-22T09:03:57.000Z</published>
    <updated>2018-12-22T13:01:16.062Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月22日21:01</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><h3 id="斜体和粗体"><a href="#斜体和粗体" class="headerlink" title="斜体和粗体"></a>斜体和粗体</h3><p>  代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*斜体*或_斜体_</span><br><span class="line">**粗体**</span><br><span class="line">***加粗斜体***</span><br><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><p><em>这是一段斜体</em><br><strong>这是一段粗体</strong><br><strong><em>这是一段加粗斜体</em></strong><br><del>这是一段删除线</del></p><h3 id="分级标题"><a href="#分级标题" class="headerlink" title="分级标题"></a>分级标题</h3><p>第一种写法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">这是一个一级标题</span><br><span class="line">============================</span><br><span class="line"></span><br><span class="line">这是一个二级标题</span><br><span class="line">--------------------------------------------------</span><br></pre></td></tr></table></figure></p><p>就是在文字的下一行增加不同的横线，不建议使用。</p><p>第二种写法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure></p><p>推荐使用这种方式，简单易记，不同级别的标题后面的<code>#</code>不一样多，在<code>#</code>后需要空一格。</p><p>同学们自己在编辑器中观察，很简单，一级标题字号最大，依级递减。</p><h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p>Markdown 支持两种形式的链接语法： 行内式和参考式两种形式，行内式一般使用较多。</p><h4 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h4><p><strong>语法说明：</strong><br>[]里写链接文字，()里写链接地址, ()中的”“中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的 title文字。<code>[链接文字](链接地址 &quot;链接标题&quot;)</code>这样的形式。链接地址与链接标题前有一个空格。<br>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">欢迎来到[我的博客](https://www.lixint.me)</span><br><span class="line">欢迎来到[我的博客](https://www.lixint.me &quot;LixT&apos;s Blog&quot;)</span><br></pre></td></tr></table></figure><p>显示效果：<br>欢迎来到<a href="https://www.lixint.me">我的博客</a><br>欢迎来到<a href="https://www.lixint.me" title="LixT&#39;s Blog">我的博客</a>   这一个设置了标题，在鼠标指针指在超链接上的时候会显示标题。</p><h4 id="参考式"><a href="#参考式" class="headerlink" title="参考式"></a>参考式</h4><p>参考式超链接一般用在学术论文上面，或者另一种情况，如果某一个链接在文章中多处使用，那么使用引用 的方式创建链接将非常好，它可以让你对链接进行统一的管理。<br>语法说明：<br>参考式链接分为两部分，文中的写法<code>[链接文字][链接标记]</code>，在文本的任意位置添加[链接标记]:链接地址 “链接标题”，链接地址与链接标题前有一个空格。</p><p>如果链接文字本身可以做为链接标记，你也可以写成[链接文字][]<br>[链接文字]：链接地址的形式，见代码的最后一行。</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">我经常去的几个网站[Google][1]、[Leanote][2]以及[自己的博客][3]</span><br><span class="line">[Leanote 笔记][2]是一个不错的[网站][]。</span><br><span class="line">[1]:http://www.google.com &quot;Google&quot;</span><br><span class="line">[2]:http://www.leanote.com &quot;Leanote&quot;</span><br><span class="line">[3]:https://www.lixint.me &quot;LixT&apos;s Blog&quot;</span><br><span class="line">[网站]:http://http://blog.leanote.com/freewalk</span><br></pre></td></tr></table></figure></p><p>显示效果：<br>我经常去的几个网站<a href="http://www.google.com" title="Google" target="_blank" rel="noopener">Google</a>、<a href="http://www.leanote.com" title="Leanote" target="_blank" rel="noopener">Leanote</a>以及<a href="https://www.lixint.me" title="LixT&#39;s Blog">自己的博客</a><br><a href="http://www.leanote.com" title="Leanote" target="_blank" rel="noopener">Leanote 笔记</a>是一个不错的<a href="http://http://blog.leanote.com/freewalk" target="_blank" rel="noopener">网站</a>。</p><h4 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h4><p>语法说明：<br>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用&lt;&gt;包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;https://www.lixint.me/&gt;</span><br><span class="line">&lt;address@example.com&gt;</span><br></pre></td></tr></table></figure></p><p>显示效果：<br><a href="https://www.lixint.me/">https://www.lixint.me/</a><br><a href="mailto:address@example.com" target="_blank" rel="noopener">address@example.com</a></p><h4 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h4><p>网页中，锚点其实就是页内超链接，也就是链接本文档内部的某些元素，实现当前页面中的跳转。比如我这里写下一个锚点，点击回到目录，就能跳转到目录。 在目录中点击这一节，就能跳过来。还有下一节的注脚。这些根本上都是用锚点来实现的。</p><p>注意： </p><ol><li>Markdown Extra 只支持在标题后插入锚点，其它地方无效。 </li><li>Leanote 编辑器右侧显示效果区域暂时不支持锚点跳转，所以点来点去发现没有跳转不必惊慌，但是你发布成笔记或博文后是支持跳转的。</li></ol><p>语法描述：<br>在你准备跳转到的指定标题后插入锚点{#标记}，然后在文档的其它地方写上连接到锚点的链接。</p><p>代码：<br>undefined</p><p>显示效果：<br>跳转到<a href="#index">目录</a><br>注意此项不能在Hexo博客中使用，Hexo博客会将{}中的内容进行渲染，从而引起未知错误</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><p>使用 <code>*，+，-</code>表示无序列表。<br>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 无序列表项 一</span><br><span class="line">- 无序列表项 二</span><br><span class="line">- 无序列表项 三</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><ul><li>无序列表项 一</li><li>无序列表项 二</li><li>无序列表项 三</li></ul><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><p>  有序列表则使用数字接着一个英文句点。<br>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 有序列表项 一</span><br><span class="line">2. 有序列表项 二</span><br><span class="line">3. 有序列表项 三</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><ol><li>有序列表项 一</li><li>有序列表项 二</li><li>有序列表项 三</li></ol><h4 id="定义型列表"><a href="#定义型列表" class="headerlink" title="定义型列表"></a>定义型列表</h4><p>语法说明：</p><p>定义型列表由名词和解释组成。一行写上定义，紧跟一行写上解释。解释的写法<code>:</code>紧跟一个缩进(Tab)<br>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Markdown</span><br><span class="line">:    轻量级文本标记语言，可以转换成html，pdf等格式（左侧有一个可见的冒号和四个不可见的空格）</span><br><span class="line">代码块 2</span><br><span class="line">:    这是代码块的定义（左侧有一个可见的冒号和四个不可见的空格）</span><br><span class="line">        代码块（左侧有八个不可见的空格）</span><br></pre></td></tr></table></figure><p>显示效果：<br>Markdown<br>:    轻量级文本标记语言，可以转换成html，pdf等格式（左侧有一个可见的冒号和四个不可见的空格）<br>代码块 2<br>:    这是代码块的定义（左侧有一个可见的冒号和四个不可见的空格）<br>​        代码块（左侧有八个不可见的空格）</p><h4 id="列表缩进"><a href="#列表缩进" class="headerlink" title="列表缩进"></a>列表缩进</h4><p>语法说明：</p><p>列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。</p><p>要让列表看起来更漂亮，你可以把内容用固定的缩进整理好（显示效果与代码一致）：</p><p>轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。<br>那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。<br>软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！<br>那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。<br>寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。<br>但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！<br>悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。<br>但是如果你懒，那也行：<br>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*   轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。</span><br><span class="line">    那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。 </span><br><span class="line">    软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！ </span><br><span class="line">*   那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。 </span><br><span class="line">    寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。 </span><br><span class="line">    但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！ </span><br><span class="line">    悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><ul><li>轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。<br>那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。<br>软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！ </li><li>那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。<br>寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。<br>但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！<br>悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。</li></ul><h4 id="包含段落的列表"><a href="#包含段落的列表" class="headerlink" title="包含段落的列表"></a>包含段落的列表</h4><p>语法说明：</p><p>列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符（显示效果与代码一致）：</p><p>轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。<br>那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。<br>软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！</p><p>那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。<br>寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。<br>但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！</p><p>悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。</p><p>如果你每行都有缩进，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*   轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。</span><br><span class="line">    那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。 </span><br><span class="line">    软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！</span><br><span class="line">     那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。 </span><br><span class="line">    寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。 </span><br><span class="line">    但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！ </span><br><span class="line">*   悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><ul><li>轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。<br>那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。<br>软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！<br> 那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。<br>寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。<br>但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！ </li><li>悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。</li></ul><h4 id="5-5-包含引用的列表"><a href="#5-5-包含引用的列表" class="headerlink" title="5.5. 包含引用的列表"></a>5.5. 包含引用的列表</h4><p>语法说明：<br>如果要在列表项目内放进引用，那 &gt; 就需要缩进：</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* 阅读的方法:</span><br><span class="line">  &gt; 打开书本。</span><br><span class="line">  &gt; 打开电灯。</span><br><span class="line">  &gt; 显示效果：</span><br></pre></td></tr></table></figure></p><ul><li>阅读的方法:<blockquote><p>打开书本。<br>打开电灯。<br>显示效果：</p></blockquote></li></ul><h4 id="包含代码区块的引用"><a href="#包含代码区块的引用" class="headerlink" title="包含代码区块的引用"></a>包含代码区块的引用</h4><p>语法说明：<br>如果要放代码区块的话，该区块就需要缩进两次，也就是 8 个空格或是 2 个制表符：</p><p>一列表项包含一个列表区块：</p><p><code>&lt;代码写在这&gt;</code></p><h4 id="一个特殊情况"><a href="#一个特殊情况" class="headerlink" title="一个特殊情况"></a>一个特殊情况</h4><p>在特殊情况下，项目列表很可能会不小心产生，像是下面这样的写法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1986.What a great season.</span><br></pre></td></tr></table></figure></p><p>会显示成：</p><ol start="1986"><li>What a great season.</li></ol><p>前面的1986成了序号</p><p>换句话说，也就是在行首出现了数字-句点-空白，要避免这样的状况，你可以在句点前面加上反斜杠：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1986\. What a great season.</span><br></pre></td></tr></table></figure></p><p>会显示成：<br>1986. What a great season.</p><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>语法说明：<br>引用需要在被引用的文本前加上&gt;符号。<br>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; 这是一个有两段文字的引用</span><br><span class="line">&gt; 无意义的占行文字1.</span><br><span class="line">&gt; 无意义的占行文字2.</span><br><span class="line">&gt;</span><br><span class="line">&gt; 无意义的占行文字3.</span><br><span class="line">&gt; 无意义的占行文字4.</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><blockquote><p>这是一个有两段文字的引用<br>无意义的占行文字1.<br>无意义的占行文字2.</p><p>无意义的占行文字3.<br>无意义的占行文字4.</p></blockquote><p>Markdown 也允许你偷懒只在整个段落的第一行最前面加上 &gt; ：</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; 这是一个有两段文字的引用</span><br><span class="line">无意义的占行文字1.</span><br><span class="line">无意义的占行文字2.</span><br><span class="line">无意义的占行文字3.</span><br><span class="line">无意义的占行文字4.</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><blockquote><p>这是一个有两段文字的引用,<br>无意义的占行文字1.<br>无意义的占行文字2.<br>无意义的占行文字3.<br>无意义的占行文字4.</p></blockquote><h4 id="引用的多层嵌套"><a href="#引用的多层嵌套" class="headerlink" title="引用的多层嵌套"></a>引用的多层嵌套</h4><p>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 &gt; ：</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 请问 Markdwon 怎么用？ - 小白</span><br><span class="line">&gt;&gt; 自己看教程！ - 愤青</span><br><span class="line">&gt;&gt;&gt; 教程在哪？ - 小白</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><blockquote><p>请问 Markdwon 怎么用？ - 小白</p><blockquote><p>自己看教程！ - 愤青</p><blockquote><p>教程在哪？ - 小白</p></blockquote></blockquote></blockquote><h4 id="引用其它要素"><a href="#引用其它要素" class="headerlink" title="引用其它要素"></a>引用其它要素</h4><p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; 1.   这是第一行列表项。</span><br><span class="line">&gt; 2.   这是第二行列表项。</span><br><span class="line">&gt;</span><br><span class="line">&gt; 给出一些例子代码：</span><br><span class="line">&gt;</span><br><span class="line">&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);</span><br><span class="line">&gt;`return shell_exec(&quot;echo $input | $markdown_script&quot;);`</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><blockquote><ol><li>这是第一行列表项。</li><li>这是第二行列表项。</li></ol><p>给出一些例子代码：</p><pre><code>return shell_exec(&quot;echo $input | $markdown_script&quot;);</code></pre><p><code>return shell_exec(&quot;echo $input | $markdown_script&quot;);</code></p></blockquote><h3 id="插入图像"><a href="#插入图像" class="headerlink" title="插入图像"></a>插入图像</h3><p>图片的创建方式与超链接相似，而且和超链接一样也有两种写法，行内式和参考式写法。</p><p>语法中图片Alt的意思是如果图片因为某些原因不能显示，就用定义的图片Alt文字来代替图片。 图片Title则和链接中的Title一样，表示鼠标悬停与图片上时出现的文字。 Alt 和 Title 都不是必须的，可以省略，但建议写上。</p><h4 id="行内式-1"><a href="#行内式-1" class="headerlink" title="行内式"></a>行内式</h4><p>语法说明：<code>![图片Alt](图片地址 &quot;图片Title&quot;)</code></p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">美丽花儿： </span><br><span class="line">![美丽花儿](http://ww2.sinaimg.cn/large/56d258bdjw1eugeubg8ujj21kw16odn6.jpg &quot;美丽花儿&quot;)</span><br></pre></td></tr></table></figure></p><p>显示效果：<br><img src="http://ww2.sinaimg.cn/large/56d258bdjw1eugeubg8ujj21kw16odn6.jpg" alt="美丽花儿" title="美丽花儿"> </p><h4 id="参考式-1"><a href="#参考式-1" class="headerlink" title="参考式"></a>参考式</h4><p>语法说明：</p><p>在文档要插入图片的地方写<code>![图片Alt][标记]</code></p><p>在文档的最后写上<code>[标记]:图片地址 “Title”</code><br>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">美丽花儿：</span><br><span class="line">![美丽花儿][flower]</span><br><span class="line">[flower]:http://ww2.sinaimg.cn/large/56d258bdjw1eugeubg8ujj21kw16odn6.jpg  &quot;美丽花儿&quot;</span><br></pre></td></tr></table></figure></p><p>显示效果：<br>![美丽花儿][flower]<br>[flower]:<a href="http://ww2.sinaimg.cn/large/56d258bdjw1eugeubg8ujj21kw16odn6.jpg" target="_blank" rel="noopener">http://ww2.sinaimg.cn/large/56d258bdjw1eugeubg8ujj21kw16odn6.jpg</a>  “美丽花儿”</p><h3 id="内容目录"><a href="#内容目录" class="headerlink" title="内容目录"></a>内容目录</h3><p>在段落中填写 [TOC] 以显示全文内容的目录结构。</p><p>效果参见最上方的目录</p><h3 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h3><p>语法说明：<br>在需要添加注脚的文字后加上<code>脚注名字[^注脚名字]</code>,称为加注。 然后在文本的任意位置(一般在最后)添加脚注，脚注前必须有对应的脚注名字。</p><p>注意：经测试注脚与注脚之间必须空一行，不然会失效。成功后会发现，即使你没有把注脚写在文末，经Markdown转换后，也会自动归类到文章的最后。</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">使用 Markdown[^1]可以效率的书写文档, 直接转换成 HTML[^2], 你可以使用 Leanote[^Le] 编辑器进行书写。</span><br><span class="line">[^1]: Markdown是一种纯文本标记语言</span><br><span class="line">[^2]: HyperText Markup Language 超文本标记语言</span><br><span class="line">[^Le]: 开源笔记平台，支持Markdown和笔记直接发为博文</span><br></pre></td></tr></table></figure></p><p>显示效果：<br>使用 Markdown[^1]可以效率的书写文档, 直接转换成 HTML[^2], 你可以使用 Leanote[^Le] 编辑器进行书写。<br>[^1]: Markdown是一种纯文本标记语言<br>[^2]: HyperText Markup Language 超文本标记语言<br>[^Le]: 开源笔记平台，支持Markdown和笔记直接发为博文</p><p>注：脚注自动被搬运到最后面，请到文章末尾查看，并且脚注后方的链接可以直接跳转回到加注的地方。</p><h3 id="LaTeX-公式"><a href="#LaTeX-公式" class="headerlink" title="LaTeX 公式"></a>LaTeX 公式</h3><h4 id="表示行内公式："><a href="#表示行内公式：" class="headerlink" title="$ 表示行内公式："></a>$ 表示行内公式：</h4><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。</span><br></pre></td></tr></table></figure><p>显示效果：<br>质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。</p><p>注意：我的博客没有开启公式显示，所以可能公式显示不准确，请自己用Markdown编辑器查看效果</p><h4 id="表示整行公式："><a href="#表示整行公式：" class="headerlink" title="$ 表示整行公式："></a>$ 表示整行公式：</h4><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$\sum_&#123;i=1&#125;^n a_i=0$$</span><br><span class="line">$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$</span><br><span class="line">$$\sum^&#123;j-1&#125;_&#123;k=0&#125;&#123;\widehat&#123;\gamma&#125;_&#123;kj&#125; z_k&#125;$$</span><br></pre></td></tr></table></figure></p><p>访问 <a href="https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">MathJax</a> 参考更多使用方法。</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>语法说明：</p><p>不管是哪种方式，第一行为表头，第二行分隔表头和主体部分，第三行开始每一行为一个表格行。<br>列于列之间用管道符|隔开。原生方式的表格每一行的两边也要有管道符。<br>第二行还可以为不同的列指定对齐方向。默认为左对齐，在-右边加上:就右对齐。<br>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">简单方式写表格：</span><br><span class="line"></span><br><span class="line">学号|姓名|分数</span><br><span class="line">-|-|-</span><br><span class="line">小明|男|75</span><br><span class="line">小红|女|79</span><br><span class="line">小陆|男|92</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">原生方式写表格：</span><br><span class="line"></span><br><span class="line">| 学号 | 姓名 | 分数 |</span><br><span class="line">| ---- | ---- | ---- |</span><br><span class="line">| 小明 | 男   | 75   |</span><br><span class="line">| 小红 | 女   | 79   |</span><br><span class="line">| 小陆 | 男   | 92   |</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">为表格第二列指定方向：</span><br><span class="line"></span><br><span class="line">| 产品             |     价格 |</span><br><span class="line">| ---------------- | -------: |</span><br><span class="line">| Leanote 高级账号 |  60元/年 |</span><br><span class="line">| Leanote 超级账号 | 120元/年 |</span><br></pre></td></tr></table></figure><p>显示效果：<br>简单方式写表格：</p><table><thead><tr><th>学号</th><th>姓名</th><th>分数</th></tr></thead><tbody><tr><td>小明</td><td>男</td><td>75</td></tr><tr><td>小红</td><td>女</td><td>79</td></tr><tr><td>小陆</td><td>男</td><td>92</td></tr></tbody></table><p>原生方式写表格：</p><table><thead><tr><th>学号</th><th>姓名</th><th>分数</th></tr></thead><tbody><tr><td>小明</td><td>男</td><td>75</td></tr><tr><td>小红</td><td>女</td><td>79</td></tr><tr><td>小陆</td><td>男</td><td>92</td></tr></tbody></table><p>为表格第二列指定方向：</p><table><thead><tr><th>产品</th><th style="text-align:right">价格</th></tr></thead><tbody><tr><td>Leanote 高级账号</td><td style="text-align:right">60元/年</td></tr><tr><td>Leanote 超级账号</td><td style="text-align:right">120元/年</td></tr></tbody></table><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* * *</span><br><span class="line">***</span><br><span class="line">*****</span><br><span class="line">- - -</span><br><span class="line">---------------------------------------</span><br></pre></td></tr></table></figure></p><p>显示效果都一样：</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>对于程序员来说这个功能是必不可少的，插入程序代码的方式有两种，一种是利用缩进(Tab), 另一种是利用”`”符号（一般在ESC键下方）包裹代码。</p><p>语法说明：</p><p>插入行内代码，即插入一个单词或者一句代码的情况，使用<code>code</code>这样的形式插入。<br>插入多行代码，可以使用缩进或者“<code>code “</code>,具体看示例。<br>注意： 缩进式插入前方必须有空行</p><h4 id="行内式-2"><a href="#行内式-2" class="headerlink" title="行内式"></a>行内式</h4><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C语言里的函数 `scanf()` 怎么使用？</span><br></pre></td></tr></table></figure></p><p>显示效果：<br>C语言里的函数 <code>scanf()</code> 怎么使用？</p><h4 id="缩进式多行代码"><a href="#缩进式多行代码" class="headerlink" title="缩进式多行代码"></a>缩进式多行代码</h4><p>缩进 4 个空格或是 1 个制表符</p><p>一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。</p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    printf(&quot;Hello world\n&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>显示效果：<br>​    #include &lt;stdio.h&gt;<br>​    int main(void)<br>​    {<br>​    printf(“Hello world\n”);<br>​    }</p><h4 id="用三个”-”包裹多行代码"><a href="#用三个”-”包裹多行代码" class="headerlink" title="用三个”`”包裹多行代码"></a>用三个”`”包裹多行代码</h4><p>这个不太好演示，请自行体验，输入三个`后空一行写代码，</p><p>结束后另起一行输入三个`表示代码块结束</p><h3 id="HTML-原始码"><a href="#HTML-原始码" class="headerlink" title="HTML 原始码"></a>HTML 原始码</h3><p>Markdown支持很多HTML代码，具体请自行体验</p>]]></content>
    
    <summary type="html">
    
      汇总了Markdown基本语法，分分钟让你掌握Markdown。
    
    </summary>
    
      <category term="博客搭建" scheme="https://www.lixint.me/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Markdown" scheme="https://www.lixint.me/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Next主题修改第二弹</title>
    <link href="https://www.lixint.me/next2.html"/>
    <id>https://www.lixint.me/next2.html</id>
    <published>2018-12-21T09:05:54.000Z</published>
    <updated>2018-12-21T09:25:35.480Z</updated>
    
    <content type="html"><![CDATA[<h3 id="修改文章内链接文本样式"><a href="#修改文章内链接文本样式" class="headerlink" title="修改文章内链接文本样式"></a>修改文章内链接文本样式</h3><p>修改文件 <code>themes\next\source\css\_common\components\post\post.styl</code>，在末尾添加如下css样式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 文章内链接文本样式</span><br><span class="line">.post-body p a&#123;</span><br><span class="line">  color: #0593d3;</span><br><span class="line">  border-bottom: none;</span><br><span class="line">  border-bottom: 1px solid #0593d3;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: #fc6423;</span><br><span class="line">    border-bottom: none;</span><br><span class="line">    border-bottom: 1px solid #fc6423;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中选择<code>.post-body</code> 是为了不影响标题，选择 <code>p</code> 是为了不影响首页“阅读全文”的显示样式,颜色可以自己定义。</p><h3 id="修改文章底部的那个带-号的标签"><a href="#修改文章底部的那个带-号的标签" class="headerlink" title="修改文章底部的那个带#号的标签"></a>修改文章底部的那个带#号的标签</h3><p>效果</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/next2/1545377774429.png" alt="1545377774429"></p><p>修改模板<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将 # 换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code>，此处的图标用的是Font-Awesome，可以根据需要换成其他的图标。</p><h3 id="在每篇文章末尾统一添加“本文结束”标记"><a href="#在每篇文章末尾统一添加“本文结束”标记" class="headerlink" title="在每篇文章末尾统一添加“本文结束”标记"></a>在每篇文章末尾统一添加“本文结束”标记</h3><p>在路径 <code>\themes\next\layout\_macro</code> 中新建 <code>passage-end-tag.swig</code> 文件,并添加以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>接着打开<code>\themes\next\layout\_macro\post.swig</code>文件，在<code>post-body</code> 之后， <code>post-footer</code> 之前添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &#123;% if not is_index %&#125;</span><br><span class="line">    &#123;% include &apos;passage-end-tag.swig&apos; %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>然后打开<a style="color:#9900ff"><strong>主题配置文件</strong></a>,在末尾添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 文章末尾添加“本文结束”标记</span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure><h3 id="博文压缩"><a href="#博文压缩" class="headerlink" title="博文压缩"></a>博文压缩</h3><p>安装插件，在站点的根目录下执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp -g</span><br><span class="line">npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save</span><br></pre></td></tr></table></figure><p>博客根目录新建文件 <code>gulpfile.js</code>，填入软下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`var gulp = require(&apos;gulp&apos;);var minifycss = require(&apos;gulp-minify-css&apos;);var uglify = require(&apos;gulp-uglify&apos;);var htmlmin = require(&apos;gulp-htmlmin&apos;);var htmlclean = require(&apos;gulp-htmlclean&apos;);// 压缩 public 目录 cssgulp.task(&apos;minify-css&apos;, function() &#123;    return gulp.src(&apos;./public/**/*.css&apos;)        .pipe(minifycss())        .pipe(gulp.dest(&apos;./public&apos;));&#125;);// 压缩 public 目录 htmlgulp.task(&apos;minify-html&apos;, function() &#123;  return gulp.src(&apos;./public/**/*.html&apos;)    .pipe(htmlclean())    .pipe(htmlmin(&#123;         removeComments: true,         minifyJS: true,         minifyCSS: true,         minifyURLs: true,    &#125;))    .pipe(gulp.dest(&apos;./public&apos;))&#125;);// 压缩 public/js 目录 jsgulp.task(&apos;minify-js&apos;, function() &#123;    return gulp.src(&apos;./public/**/*.js&apos;)        .pipe(uglify())        .pipe(gulp.dest(&apos;./public&apos;));&#125;);// 执行 gulp 命令时执行的任务gulp.task(&apos;default&apos;, [    &apos;minify-html&apos;,&apos;minify-css&apos;,&apos;minify-js&apos;]);`</span><br></pre></td></tr></table></figure><p>生成博文时执行 <code>hexo g &amp;&amp; gulp</code> 就会根据 <code>gulpfile.js</code> 中的配置，对 public 目录中的静态资源文件进行压缩。</p><h3 id="修改行内代码块代码颜色"><a href="#修改行内代码块代码颜色" class="headerlink" title="修改行内代码块代码颜色"></a>修改行内代码块代码颜色</h3><p>打开<code>\themes\next\source\css\_custom\custom.styl</code>,向里面加入：(颜色可以自己定义)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// Custom styles.</span><br><span class="line">code &#123;</span><br><span class="line">    color: #ff7600;</span><br><span class="line">    background: #fbf7f8;</span><br><span class="line">    margin: 2px;</span><br><span class="line">&#125;</span><br><span class="line">// 大代码块的自定义样式</span><br><span class="line">.highlight, pre &#123;</span><br><span class="line">    margin: 5px 0;</span><br><span class="line">    padding: 5px;</span><br><span class="line">    border-radius: 3px;</span><br><span class="line">&#125;</span><br><span class="line">.highlight, code, pre &#123;</span><br><span class="line">    border: 1px solid #d6d6d6;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在网站底部加上访问量"><a href="#在网站底部加上访问量" class="headerlink" title="在网站底部加上访问量"></a>在网站底部加上访问量</h3><p>打开<a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>busuanzi_count</code>，对如下项目将<code>false</code>设置为<code>true</code>。其中的<code>icon</code>项目使用的也是Font-Awesome。<code>total</code>项为站点总统计，显示在站点首页底部，分为<code>total_visitors</code>：总访问人数，<code>total_views</code>：总访问量。<code>post_views</code>为文章访问量，显示在文章页面的标题下方。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_visitors:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_visitors_icon:</span> <span class="string">user</span></span><br><span class="line"><span class="attr">  total_views:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_views_icon:</span> <span class="string">eye</span></span><br><span class="line"><span class="attr">  post_views:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  post_views_icon:</span> <span class="string">eye</span></span><br></pre></td></tr></table></figure><p><a style="color: #ff0033">注意：</a>不蒜子之前更新过一次，Next主题如果设置后不生效请检查一下<code>themes\next\layout\_third-party\analyticsbusuanzi-counter.swig</code>文件中的链接是否是<code>https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js</code></p><h3 id="添加-README-md-文件"><a href="#添加-README-md-文件" class="headerlink" title="添加 README.md 文件"></a>添加 README.md 文件</h3><p>每个项目下一般都有一个 <code>README.md</code> 文件，但是使用 hexo 部署到仓库后，项目下是没有 <code>README.md</code> 文件的。</p><p>在 Hexo 目录下的 <code>source</code> 根目录下添加一个 <code>README.md</code> 文件，修改站点配置文件 _<code>config.yml</code>，将 <code>skip_render</code> 参数的值设置为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skip_render: README.md</span><br></pre></td></tr></table></figure><p>保存退出即可。再次使用 <code>hexo d</code> 命令部署博客的时候就不会在渲染 README.md 这个文件了。</p><h3 id="在文章底部增加版权信息"><a href="#在文章底部增加版权信息" class="headerlink" title="在文章底部增加版权信息"></a>在文章底部增加版权信息</h3><p>最新版本的Next主题是内置了版权信息的，<a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>post_copyright</code>设置为<code>true</code>即可。</p><p>如果没有这个项目，可以按照以下方法添加自定义版权信息：</p><p>在目录 <code>next/layout/_macro/下</code>添加 <code>my-copyright.swig</code>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if page.copyright %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"my_post_copyright"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- JS库 sweetalert 可修改路径 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/2.0.0/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/sweetalert/dist/sweetalert.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>本文标题:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for(page.path) &#125;&#125;"</span>&gt;</span>&#123;&#123; page.title &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>文章作者:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span> <span class="attr">title</span>=<span class="string">"访问 &#123;&#123; theme.author &#125;&#125; 的个人博客"</span>&gt;</span>&#123;&#123; theme.author &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>发布时间:<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; page.date.format("YYYY年MM月DD日 - HH:mm") &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>最后更新:<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; page.updated.format("YYYY年MM月DD日 - HH:mm") &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>原始链接:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for(page.path) &#125;&#125;"</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; page.title &#125;&#125;"</span>&gt;</span>&#123;&#123; page.permalink &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"copy-path"</span>  <span class="attr">title</span>=<span class="string">"点击复制文章链接"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-clipboard"</span> <span class="attr">data-clipboard-text</span>=<span class="string">"&#123;&#123; page.permalink &#125;&#125;"</span>  <span class="attr">aria-label</span>=<span class="string">"复制成功！"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>许可协议:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-creative-commons"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">rel</span>=<span class="string">"license"</span> <span class="attr">href</span>=<span class="string">"https://creativecommons.org/licenses/by-nc-nd/4.0/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">title</span>=<span class="string">"Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)"</span>&gt;</span>署名-非商业性使用-禁止演绎 4.0 国际<span class="tag">&lt;/<span class="name">a</span>&gt;</span> 转载请保留原文链接及作者。<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"> </span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> clipboard = <span class="keyword">new</span> Clipboard(<span class="string">'.fa-clipboard'</span>);</span></span><br><span class="line"><span class="javascript">    $(<span class="string">".fa-clipboard"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      clipboard.on(<span class="string">'success'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="undefined">        swal(&#123;   </span></span><br><span class="line"><span class="javascript">          title: <span class="string">""</span>,   </span></span><br><span class="line"><span class="javascript">          text: <span class="string">'复制成功'</span>,</span></span><br><span class="line"><span class="javascript">          icon: <span class="string">"success"</span>, </span></span><br><span class="line"><span class="javascript">          showConfirmButton: <span class="literal">true</span></span></span><br><span class="line"><span class="undefined">          &#125;);</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined">    &#125;);  </span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>在目录<code>next/source/css/_common/components/post/</code>下添加<code>my-post-copyright.styl</code>：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.my_post_copyright</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">85%</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">45em</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">2.8em</span> auto <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">1.0em</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d3d3d3</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">0.93rem</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.6em</span>;</span><br><span class="line">  <span class="attribute">word-break</span>: break-all;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(255,255,255,0.4);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">p</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">5.2em</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#b5b5b5</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.raw</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">1em</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">5em</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#808080</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#a3d2a3</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.fa-clipboard</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.post-url</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.copy-path</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">1em</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1em</span>;</span><br><span class="line">  +mobile()&#123;display:none;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my_post_copyright</span> <span class="selector-class">.copy-path</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#808080</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改<code>next/layout/_macro/post.swig</code>，在代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">      &#123;% if not is_index %&#125;</span><br><span class="line">        &#123;% include &apos;wechat-subscriber.swig&apos; %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>之前添加增加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">      &#123;% if not is_index %&#125;</span><br><span class="line">        &#123;% include &apos;my-copyright.swig&apos; %&#125;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>修改<code>next/source/css/_common/components/post/post.styl</code>文件，在最后一行增加代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import &quot;my-post-copyright&quot;</span><br></pre></td></tr></table></figure><p>保存重新生成即可。<br>如果要在该博文下面增加版权信息的显示，需要在 Markdown 中增加<code>copyright: true</code>的设置<code>copyright: true</code>。</p><p><strong>小技巧</strong>：如果你觉得每次都要输入<code>copyright: true</code>很麻烦的话,那么在<code>/scaffolds/post.md</code>文件中添加<code>copyright</code>项目</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/next2/1545381519938.png" alt="1545381519938"></p><p>这样每次<code>hexo new &quot;你的内容&quot;</code>之后，生成的md文件会自动把<code>copyright:</code>加到里面去。</p><h3 id="文章加密访问"><a href="#文章加密访问" class="headerlink" title="文章加密访问"></a>文章加密访问</h3><p>打开<code>themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig</code>文件,在以下位置插入这样一段代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'&#123;&#123; page.password &#125;&#125;'</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (prompt(<span class="string">'请输入文章密码'</span>) !== <span class="string">'&#123;&#123; page.password &#125;&#125;'</span>) &#123;</span><br><span class="line">                alert(<span class="string">'密码错误！'</span>);</span><br><span class="line">                <span class="keyword">if</span> (history.length === <span class="number">1</span>) &#123;</span><br><span class="line">                    location.replace(<span class="string">"http://xxxxxxx.xxx"</span>); <span class="comment">// 这里替换成你的首页</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    history.back();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>然后在文章上写成类似这样：</p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/next2/1545381898442.png" alt="1545381898442"></p><p>### </p>]]></content>
    
    <summary type="html">
    
      新增了部分修改项目
    
    </summary>
    
      <category term="博客搭建" scheme="https://www.lixint.me/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://www.lixint.me/tags/Hexo/"/>
    
      <category term="Next主题" scheme="https://www.lixint.me/tags/Next%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>常用小工具汇总</title>
    <link href="https://www.lixint.me/tools.html"/>
    <id>https://www.lixint.me/tools.html</id>
    <published>2018-12-18T09:30:30.000Z</published>
    <updated>2018-12-18T12:53:28.594Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月18日20:53</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><p><a href="https://www.iplocation.net/" rel="noopener" title="" target="_blank">查询ip地址位置与运营商</a><br><a href="https://www.mediafire.com" rel="noopener" title="" target="_blank">mediafile网盘</a></p>]]></content>
    
    <summary type="html">
    
      常用的工具汇总
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo博客常见错误分析</title>
    <link href="https://www.lixint.me/errortype.html"/>
    <id>https://www.lixint.me/errortype.html</id>
    <published>2018-12-14T14:50:12.000Z</published>
    <updated>2018-12-18T03:14:20.452Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月18日11:14</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><blockquote class="blockquote-center"><p>欢迎加入博客搭建交流群（QQ群号60429576）==&gt;<a style="color:#ff0033" href="http://qq.cn.hn/g6Y" title="QQ群号60429576" rel="noopener" target="_blank"><strong>点击加入</strong></a>&lt;==</p></blockquote><h3 id="常见错误分析"><a href="#常见错误分析" class="headerlink" title="常见错误分析"></a>常见错误分析</h3><p>以下是常见的错误类型：</p><h4 id="YAML-解析错误"><a href="#YAML-解析错误" class="headerlink" title="YAML 解析错误"></a>YAML 解析错误</h4>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:</span><br><span class="line">last_updated: Last updated: %s</span><br></pre></td></tr></table></figure><p>   如果 YAML 字符串中包含冒号（<code>:</code>）的话，请加上引号。<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JS-YAML: bad indentation of a mapping entry at line 18, column 31:</span><br><span class="line">last_updated:&quot;Last updated: %s&quot;</span><br></pre></td></tr></table></figure></p><p>   请确认您使用空格进行缩进（Soft tab），并确认冒号后有加上一个空格。<br>   您可参阅<a href="http://www.yaml.org/spec/1.2/spec.html" rel="noopener" title="YAML 规范" target="_blank">YAML 规范</a>以取得更多信息。</p><h4 id="EMFILE-错误"><a href="#EMFILE-错误" class="headerlink" title="EMFILE 错误"></a>EMFILE 错误</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: EMFILE, too many open files</span><br></pre></td></tr></table></figure><p>虽然 Node.js 有非阻塞 I/O，同步 I/O 的数量仍被系统所限制，在生成大量静态文件的时候，您可能会碰到 EMFILE 错误，您可以尝试提高同步 I/O 的限制数量来解决此问题。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ulimit -n 10000</span><br></pre></td></tr></table></figure></p><p>（这一命令只对Linux系统有效）</p><h4 id="Git-部署问题"><a href="#Git-部署问题" class="headerlink" title="Git 部署问题"></a>Git 部署问题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fatal: &apos;username.github.io&apos; does not appear to be a git repository</span><br></pre></td></tr></table></figure><p>请确认您已经在电脑上<a href="https://www.lixint.me/hexo-git.html">配置 git</a>，或改用 HTTPS 库（repository）地址。</p><h4 id="服务器问题"><a href="#服务器问题" class="headerlink" title="服务器问题"></a>服务器问题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: listen EADDRINUSE</span><br></pre></td></tr></table></figure><p>您可能同时开启两个 Hexo 服务器，或者有其他应用程序正在占用相同的端口，请尝试修改 <code>port</code> 参数，或是在启动 Hexo 服务器时加上 <code>-p</code> 选项。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -p 5000</span><br></pre></td></tr></table></figure></p><h4 id="插件安装问题"><a href="#插件安装问题" class="headerlink" title="插件安装问题"></a>插件安装问题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm ERR! node-waf configure build</span><br></pre></td></tr></table></figure><p>当您尝试安装以 C/C++ 或其他非 JavaScript 语言所编写的插件时，可能会遇到此类问题，请确认您已经在电脑上安装相对应的编译器。</p><h4 id="DTrace-错误-（Mac-OS-X）"><a href="#DTrace-错误-（Mac-OS-X）" class="headerlink" title="DTrace 错误 （Mac OS X）"></a>DTrace 错误 （Mac OS X）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123; [Error: Cannot find module &apos;./build/Release/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br><span class="line">&#123; [Error: Cannot find module &apos;./build/default/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br><span class="line">&#123; [Error: Cannot find module &apos;./build/Debug/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</span><br></pre></td></tr></table></figure><p>DTrace 安装可能有错误 , 使用下列命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo --no-optional</span><br></pre></td></tr></table></figure></p><p>参考 <a href="https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796" target="_blank" rel="noopener">#1326</a></p><h4 id="在-Jade-或-Swig-遍历资料"><a href="#在-Jade-或-Swig-遍历资料" class="headerlink" title="在 Jade 或 Swig 遍历资料"></a>在 Jade 或 Swig 遍历资料</h4><p>Hexo 使用 <a href="https://github.com/tommy351/warehouse" target="_blank" rel="noopener">Warehouse</a> 存储资料，它不是一般数组所以必须先进行类型转型才能遍历。<br>undefined</p><h4 id="资料没有更新"><a href="#资料没有更新" class="headerlink" title="资料没有更新"></a>资料没有更新</h4><p>有时资料可能没有被更新，或是生成的文件与修改前的相同，您可以尝试清除缓存并再执行一次。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure></p><h4 id="泄露（Escape）内容"><a href="#泄露（Escape）内容" class="headerlink" title="泄露（Escape）内容"></a>泄露（Escape）内容</h4><p>Hexo 使用 <a href="http://mozilla.github.io/nunjucks/" target="_blank" rel="noopener">Nunjucks</a> 来解析文章（旧版本使用 <a href="http://paularmstrong.github.io/swig/" target="_blank" rel="noopener">Swig</a>，两者语法类似），内容若包含 `{{ }}` 或 `{% %}` 可能导致解析错误，您可以用 <code>raw</code> 标签包裹来避免潜在问题发生。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">Hello &#123;&#123; sensitive &#125;&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure></p><h4 id="ENOSPC-错误-（Linux）"><a href="#ENOSPC-错误-（Linux）" class="headerlink" title="ENOSPC 错误 （Linux）"></a>ENOSPC 错误 （Linux）</h4><p>运行 <code>$ hexo server</code> 命令有时会返回这样的错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: watch ENOSPC ...</span><br></pre></td></tr></table></figure></p><p>它可以用过运行 <code>$ npm dedupe</code> 来解决，如果不起作用的话，可以尝试在 Linux 终端中运行下列命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</span><br></pre></td></tr></table></figure></p><p>这将会提高你能监视的文件数量。</p><h4 id="Process-Out-of-Memory"><a href="#Process-Out-of-Memory" class="headerlink" title="Process Out of Memory"></a>Process Out of Memory</h4><p>当<code>hexo g</code>时，遇到以下错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - process out of memory</span><br></pre></td></tr></table></figure></p><p>如下，更改<code>hexo-cli</code>文件的第一行，来增大nodejs堆内存.该bug已在<a href="https://github.com/hexojs/hexo/issues/1735" target="_blank" rel="noopener">新版本</a>修复。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env node --max_old_space_size=8192</span><br></pre></td></tr></table></figure></p><h4 id="Git-Deployment-Problems"><a href="#Git-Deployment-Problems" class="headerlink" title="Git Deployment Problems"></a>Git Deployment Problems</h4><p><code>RPC failed</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">error: RPC failed; result=22, HTTP code = 403</span><br><span class="line">fatal: &apos;username.github.io&apos; does not appear to be a git repository</span><br></pre></td></tr></table></figure></p><p>确保你有你的电脑上设置git正确或尝试使用HTTPS存储库URL。<br><code>Error: ENOENT: no such file or directory</code><br>这个需要有一定的git的知识，因为可能是由于写错了标签,类别,或文件名，导致本地和github冲突了，Git不能自动合并这一变化所以它打破了自动分支。<br>解决办法：</p><ol><li>检查文章的标签和类别,确保本地和github上是相同的。</li><li>合并分支（Commit）。</li><li>清除，重构。在站点目录下，命令行（即Git Bash）运行<code>hexo clean</code>和<code>hexo g</code></li><li>手动将站点目录下的<code>public</code>文件夹复制到您的桌面</li><li>从你的master分支切换到部署在本地分支。</li><li>从桌面复制<code>public</code>文件夹到本地分支。</li><li>合并分支到github（Commit）。</li><li>切回master分支。</li></ol><hr><h4 id="Server-Problems"><a href="#Server-Problems" class="headerlink" title="Server Problems"></a>Server Problems</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: listen EADDRINUSE</span><br></pre></td></tr></table></figure><p>你可能使用相同的端口，同时开启了两个Hexo服务器。如果需要同时开启，可以尝试修改端口设置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -p 5000</span><br></pre></td></tr></table></figure></p><h4 id="Plugin-Installation-Problems"><a href="#Plugin-Installation-Problems" class="headerlink" title="Plugin Installation Problems"></a>Plugin Installation Problems</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm ERR! node-waf configure build</span><br></pre></td></tr></table></figure><p>这个错误可能发生在试图安装一个用Cc++或另一个javascript语言编写的插件。确保您已经安装了正确的编译器在您的计算机上。</p><h4 id="Iterate-Data-Model-on-Jade-or-Swig"><a href="#Iterate-Data-Model-on-Jade-or-Swig" class="headerlink" title="Iterate Data Model on Jade or Swig"></a>Iterate Data Model on Jade or Swig</h4><p>Hexo使用仓库的数据模型。这不是一个数组,所以你可能需要将对象转换为iterable。<br>undefined</p><h4 id="No-command-is-executed"><a href="#No-command-is-executed" class="headerlink" title="No command is executed"></a>No command is executed</h4><p>那个不能使用除<code>help</code>、<code>init</code>和<code>version</code>以外的命令行（即Git Bash）时, 有可能时站点目录下的<code>package.json</code>文件，缺少<code>hexo</code> ，如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;hexo&quot;: &#123;</span><br><span class="line">    &quot;version&quot;: &quot;3.2.2&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="ENOSPC-Error-Linux"><a href="#ENOSPC-Error-Linux" class="headerlink" title="ENOSPC Error (Linux)"></a>ENOSPC Error (Linux)</h4><p>如果运行命令<code>$ hexo server</code> 返回一个错误:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: watch ENOSPC …</span><br></pre></td></tr></table></figure></p><p>可以通过运行<code>$ npm dedupe</code>或者以下命令行（即Git Bash）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</span><br></pre></td></tr></table></figure></p><p>来增加测试时，你可以看见的文件数量。</p><h4 id="EMPERM-Error-Windows-Subsystem-for-Linux"><a href="#EMPERM-Error-Windows-Subsystem-for-Linux" class="headerlink" title="EMPERM Error (Windows Subsystem for Linux)"></a>EMPERM Error (Windows Subsystem for Linux)</h4><p>如果在Windows Subsystem for Linux，运行命令<code>$ hexo server</code> 返回这个错误:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: watch /path/to/hexo/theme/ EMPERM</span><br></pre></td></tr></table></figure></p><p>因为目前在Windows Subsystem for Linux中，有些内容更改时，还不能实时更新到hexo服务器。<br>所以需要重新编译，再启动服务器：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></p><h4 id="Template-render-error"><a href="#Template-render-error" class="headerlink" title="Template render error"></a>Template render error</h4><p>有时运行命令<code>$ hexo g</code> 返回一个错误:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FATAL Something’s wrong. Maybe you can find the solution here: &lt;http://hexo.io/docs/troubleshooting.html&gt;</span><br><span class="line">Template render error: (unknown path)</span><br></pre></td></tr></table></figure></p><p>这意味着有些认不出来单词在你的文件，并且很可能在你的新博文,或者配置文件<code>_config.yml</code>中，比如缩进错误：<br>错误例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plugins:</span><br><span class="line">hexo-generator-feed</span><br><span class="line">hexo-generator-sitemap</span><br><span class="line">\</span><br></pre></td></tr></table></figure></p><p><code>`</code></p>]]></content>
    
    <summary type="html">
    
      总结了常见的错误类型及出现原因，大多摘自网络及官方文档
    
    </summary>
    
      <category term="博客搭建" scheme="https://www.lixint.me/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://www.lixint.me/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客部署至云服务器</title>
    <link href="https://www.lixint.me/hexovps.html"/>
    <id>https://www.lixint.me/hexovps.html</id>
    <published>2018-12-14T13:50:28.000Z</published>
    <updated>2018-12-18T03:14:52.347Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月18日11:14</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><blockquote class="blockquote-center"><p>欢迎加入博客搭建交流群（QQ群号60429576）==&gt;<a style="color:#ff0033" href="http://qq.cn.hn/g6Y" title="QQ群号60429576" rel="noopener" target="_blank"><strong>点击加入</strong></a>&lt;==</p></blockquote><p>博客的Githupages发布方案已经在<a href="https://www.lixint.me/hexo-githubpages.html">本地安装Hexo博客框架及发布至Github Pages</a>讲过了，在这里就不在赘述，本文主要讲将博客部署至个人VPS中，本次教程需要一定的Linux基础，如果不是非常有必要不建议部署在VPS上，国内的VPS主机需要进行备案才能绑定域名，国外的主机访问速度受限。</p><h3 id="主机选择"><a href="#主机选择" class="headerlink" title="主机选择"></a>主机选择</h3><p>本次教程使用的主机是腾讯云的1G1核主机，如果你是学生的话推荐腾讯云或者阿里云的学生机，或者使用阿里云的香港轻量应用服务器，这个是免备案的。详情请看：<a href="https://www.lixint.me/txamd.html">【良心推荐】阿里云香港1G1核轻量应用服务器24元/月</a></p><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><p>1.一台安装了 Ubuntu 14.04 的 <a href="https://www.lixint.me/txamd.html">云服务器</a><br>2.在本地电脑上安装 Node.js 和 npm，这个可以看<a href="https://www.lixint.me/hexo-git.html">Hexo博客本地环境安装步骤</a><br>此外，还要在云服务器上安装 Git 和 Nginx 两个必备的软件包。Git 用于版本管理和部署，Nginx 用于静态博客托管。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install git nginx -y</span><br></pre></td></tr></table></figure></p><h3 id="本地-Hexo-安装及初始化"><a href="#本地-Hexo-安装及初始化" class="headerlink" title="本地 Hexo 安装及初始化"></a>本地 Hexo 安装及初始化</h3><p>NPM 上还有许多 Hexo 相关的包，但是只要安装好了 <code>hexo-cli</code> 和 <code>hexo-server</code>这两个核心组件之后，就可以让博客跑起来了。<br>我们使用 Node.js 的包管理器 <code>npm</code> 安装 <code>hexo-cli</code> 和 <code>hexo-server</code>。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli hexo-server -g</span><br></pre></td></tr></table></figure></p><p>hexo-cli 是 Hexo 的命令行工具，可用于快速新建、发布、部署博客；hexo-server 是 Hexo 的内建服务器，可用于部署前的预览和测试。<code>-g</code> 选项，表示全局安装。<br>接下来，为 Hexo 博客做一些基础配置，包括创建基础文件。这步操作很简单，Hexo 提供了一个快捷命令，只需要提供一个存放文件的目录地址即可。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init ~<span class="regexp">/hexo_blog</span></span><br></pre></td></tr></table></figure></p><p>在国内环境下执行该命令，速度会有些慢。因为需要从 Hexo 在 Github 上的仓库克隆；仓库克隆成功后，会自动执行一系列 npm 命令，自安装依赖模块。<br>这时，我们就已经有了一个写作、管理博客的环境。<br>详细的请看<a href="https://www.lixint.me/hexo-githubpages.html">本地安装Hexo博客框架及发布至Github Pages</a>此处不赘述。</p><h3 id="云端服务器配置"><a href="#云端服务器配置" class="headerlink" title="云端服务器配置"></a>云端服务器配置</h3><p>完成本地端的操作之后，暂时回到服务器的配置。在下面的操作之前，请确保已经购买了一台<a href="https://www.qcloud.com/product/cvm?fromSource=gwzcw.84339.84339.84339" target="_blank" rel="noopener">云服务器</a>，并且能够以 <strong>ubuntu</strong> 用户身份正常登陆。<br>在这部分，要完成以下件事情：<br>1.为本地的 hexo_blog 配置一个部署静态文件的远程仓库。 许多教程均以 Github 作为中转的平台，<strong>但是会让整个流程变得更为复杂，而且会受服务器与 Github 之间网络情况的影响</strong>。假如 Github 宕机或者被封，你将无法更新博客。<br>2.配置 Nginx 托管博客文件目录。<br>3.配置远程仓库自动更新到博客文件目录的钩子。</p><h4 id="创建私有-Git-仓库"><a href="#创建私有-Git-仓库" class="headerlink" title="创建私有 Git 仓库"></a>创建私有 Git 仓库</h4><p>在 <code>/var/repo/</code> 下，创建一个名为 <code>hexo_static</code> 的裸仓库（bare repo）。<br>如果没有 <code>/var/repo</code> 目录，需要先创建；然后修改目录的所有权和用户权限，之后 ubuntu 用户都具备 <code>/var/repo</code> 目录下所有新生成的目录和文件的权限。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /<span class="keyword">var</span>/repo/</span><br><span class="line">sudo chown -R $USER:$USER /<span class="keyword">var</span>/repo/</span><br><span class="line">sudo chmod -R <span class="number">755</span> /<span class="keyword">var</span>/repo/</span><br></pre></td></tr></table></figure></p><p>然后，执行如下命令：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /<span class="keyword">var</span>/repo/</span><br><span class="line">git init --bare hexo_static.git</span><br></pre></td></tr></table></figure></p><h4 id="配置-Nginx-托管文件目录"><a href="#配置-Nginx-托管文件目录" class="headerlink" title="配置 Nginx 托管文件目录"></a>配置 Nginx 托管文件目录</h4><p>接下来，创建 <code>/var/www/hexo</code> 目录，用于 Nginx 托管。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /<span class="keyword">var</span>/www/hexo</span><br></pre></td></tr></table></figure></p><p>和上一步类似，这里也需要修改目录的所有权和权限。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R $USER:$USER /<span class="keyword">var</span>/www/hexo</span><br><span class="line">sudo chmod -R <span class="number">755</span> /<span class="keyword">var</span>/www/hexo</span><br></pre></td></tr></table></figure></p><p>然后，修改 Nginx 的 <code>default</code> 设置：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/nginx/sites-available/<span class="keyword">default</span></span><br></pre></td></tr></table></figure></p><p>将其中的 root 指令指向 /var/www/hexo 目录。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">server &#123;</span><br><span class="line">    listen <span class="number">80</span> default_server;</span><br><span class="line">    listen [::]:<span class="number">80</span> default_server ipv6only=on;</span><br><span class="line">    root /var/www/hexo; # 需要修改的部分</span><br><span class="line">    index index.html index.htm;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>保存并退出文件。如果以后购买并备案域名之后，可以再将配置中的 default_server 修改为你的域名。<br>最后，重启 Nginx 服务，使得改动生效。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service nginx restart</span><br></pre></td></tr></table></figure></p><p>做完这一步之后，你去访问服务器的 IP 时，应该还是会报错的，因为 <code>/var/www/hexo</code> 目录是空的。</p><h4 id="创建-Git-钩子"><a href="#创建-Git-钩子" class="headerlink" title="创建 Git 钩子"></a>创建 Git 钩子</h4><p>接下来，在服务器上的裸仓库 hexo_static 创建一个钩子，在满足特定条件时将静态 HTML 文件传送到 Web 服务器的目录下，即 /var/www/hexo。<br>在自动生成的 hooks 目录下创建一个新的钩子文件：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /<span class="keyword">var</span>/repo/hexo_static.git/hooks/post-receive</span><br></pre></td></tr></table></figure></p><p>在该文件中添加两行代码，指定 Git 的工作树（源代码）和 Git 目录（配置文件等）。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">git --work-tree=<span class="regexp">/var/</span>www/hexo --git-dir=<span class="regexp">/var/</span>repo/hexo_static.git checkout -f</span><br></pre></td></tr></table></figure></p><p>保存并退出文件，并让该文件变为可执行文件。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /<span class="keyword">var</span>/repo/hexo_static.git/hooks/post-receive</span><br></pre></td></tr></table></figure></p><p>至此，服务端的配置基本结束。</p><h4 id="配置密钥"><a href="#配置密钥" class="headerlink" title="配置密钥"></a>配置密钥</h4><p>如果直接是通过账户密码SSH连接的云服务器，需要配置一下密钥让博客在推送是免输密码</p><h5 id="本地生成密钥"><a href="#本地生成密钥" class="headerlink" title="本地生成密钥"></a>本地生成密钥</h5><p><strong>这个跟链接github时生成密钥是一样的。也可以用当时生成的那个id_rsa.pub公钥。</strong><br>生成 ssh-key，选加密算法（rsa、dsa），给秘钥命名（可选）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;name&quot;</span><br></pre></td></tr></table></figure></p><p>passphrase 是证书口令，以加强安全性，避免证书被恶意复制。<br>会在 <code>~.ssh</code> 下生成 <code>id_rsa</code>, <code>id_rsa.pub</code> 两个文件，分别是 私钥/公钥。</p><h5 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h5><p>公钥需保存到远程服务器 <code>~/.ssh/authorized_keys</code> 里，私钥由客户端本地留存。<br>要保证 <code>.ssh</code> 和 <code>authorized_keys</code> 都只有用户自己有写权限。否则验证无效。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ chmod -R 700 ~/.ssh/</span><br><span class="line">$ chmod 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></p><p>然后<code>vi .ssh/authorized_keys</code>把<code>id_rsa.pub</code>中的内容粘贴进去保存。</p><h4 id="博客配置"><a href="#博客配置" class="headerlink" title="博客配置"></a>博客配置</h4><p><a style="color:#9900ff"><strong>主题配置文件</strong></a>中<code>deploy</code>项目配置如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo: root@ip地址:/var/repo/hexo_static</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      Hexo博客部署只云服务器。
    
    </summary>
    
      <category term="博客搭建" scheme="https://www.lixint.me/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://www.lixint.me/tags/Hexo/"/>
    
      <category term="vps" scheme="https://www.lixint.me/tags/vps/"/>
    
  </entry>
  
  <entry>
    <title>轻量应用服务器与ECS该选哪一个</title>
    <link href="https://www.lixint.me/ecs.html"/>
    <id>https://www.lixint.me/ecs.html</id>
    <published>2018-12-14T10:55:02.000Z</published>
    <updated>2018-12-18T03:13:57.818Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月18日11:13</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><blockquote class="blockquote-center"><p>欢迎加入博客搭建交流群（QQ群号60429576）==&gt;<a style="color:#ff0033" href="http://qq.cn.hn/g6Y" title="QQ群号60429576" rel="noopener" target="_blank"><strong>点击加入</strong></a>&lt;==</p></blockquote><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><h4 id="控制台"><a href="#控制台" class="headerlink" title="控制台"></a>控制台</h4><p><strong>轻量应用服务器</strong><br><img src="https://ws2.sinaimg.cn/large/006tNc79gy1fjejwx5vxaj31kw0tt45y.jpg" alt="img"></p><p><strong>ECS</strong><br><img src="https://ws3.sinaimg.cn/large/006tNc79gy1fjejxd1zs2j31kw0tsqac.jpg" alt="img"></p><p>那么从控制台的对比上，ECS 是把所有的内容都告诉用户你的地域、操作系统、标签等等，但是新手看了难免一头雾水。而 轻量应用服务器 则做了减法，让控制台变得更加的直观简介，只告诉你重要的信息。<br>站在新手视角肯定是 轻量应用服务器 更简洁更舒服，站在我的角度么，我配置好服务器基本上很少会来看一下 ECS 的控制台，但一回来肯定是需要一些信息的，那么 ECS 能告诉我越多肯定越好。</p><h4 id="应用镜像"><a href="#应用镜像" class="headerlink" title="应用镜像"></a>应用镜像</h4><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fjfmi18cvvj31k20bs0u4.jpg" alt="img"></p><p>应用镜像像 WordPress、phpwind 其实都是基于 LAMP 镜像运行的，而 轻量应用服务器 提供的 LAMP 细节好评就是：php 是通过 php-fpm 方式运行的，而不是 mod_php，而且 MySQL 也是 5.7 版本的不是说万年 5.1 或者 5.5，能支持更多的 PHP 程序。在创建虚拟主机绑定域名商相较于一键包配合图形化控制台的确更加好用。</p><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><p><img src="https://ws1.sinaimg.cn/large/006tNc79gy1fjekajgotdj31kw0vtte9.jpg" alt="img"></p><p>轻量应用服务器 在功能上肯定是更讨喜的，安装应用镜像基本上能做到开箱即用，三大金刚 Apache Httpd、PHP、MySQL 都会默认安装好，而且添加域名、设置 HTTPS 等操作都是一键式的，极大得降低了 HTTPS 入门门槛，而且 HTTPS 的配置跑分是 A 哟，为了照顾新手不会使用 HSTS 所以没开，不然跑到 A+ 肯定是妥妥的。<br>ECS 能就只有空白的系统镜像，任何环境都是需要用户自行安装的，这在一定程度上增加了用户使用的学习成本。而 ECS 更多体现的就是专业性了，虽然复杂但是十分强大的安全组、弹性IP、均衡负载等等。</p><h4 id="基础运维"><a href="#基础运维" class="headerlink" title="基础运维"></a>基础运维</h4><p><img src="https://ws4.sinaimg.cn/large/006tNc79gy1fjekenwgv0j30z80qyq9g.jpg" alt="img"></p><p>比如说 ECS 控制台操作起来也更加的方便，点击一下就能远程连接了，操作的过程中也支持命令的右键复制和粘贴，也大大降低了用户使用终端控制的学习成本，不然还要下个 Putty 或者 Xshell 啥的也是麻烦。 然后默认只支持 密钥 登录 Linux，这个也是好评，不用密码当然更安全。<br>同样不考虑使用 Putty 或者 Xshell 等 OpenSSH 连接工具的话，ECS控制台的远程终端控制实在是难用，不过借助 DMS 产品倒是能扩展使用的灵活性。</p><h4 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h4><p>轻量的防火墙设置同 ECS 的安全组相比很简单直观更适合新手的使用，没有一些非常复杂的设置，新手看到 udp、tcp 真的是头都大了额，如果新手看教程的话，一般只会说 “记得一定要开启443端口才能使用HTTPS” 这样的话，但是一看到 ECS 又是 TCP 又是 UDP，而且端口还要写成 <code>443/443</code> 的形式，直接就是一个头两个大了。<br><img src="https://ws3.sinaimg.cn/large/006tNc79gy1fjekisa9w6j31kw0i90wi.jpg" alt="img"></p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><h4 id="无法满足企业特性"><a href="#无法满足企业特性" class="headerlink" title="无法满足企业特性"></a>无法满足企业特性</h4><p>轻量应用服务器有轻量两个字，意味着其无法持续进行高负载运行（即 CPU 长时间高负载占用），如果我们要利用 轻量应用服务器 来进行持续的渲染、转码、机器学习等持续高负载操作那么就不可以了，也不支持 Nvme 这样的超高性能的 SSD，这对于读写敏感的操作就不好了。</p><h4 id="三大金刚的版本问题"><a href="#三大金刚的版本问题" class="headerlink" title="三大金刚的版本问题"></a>三大金刚的版本问题</h4><p>Apache Httpd、PHP、MySQL 是会持续更新的，而且它们也均有爆发过大规模严重漏洞的历史，不过目前还没有看到应用镜像中的三大金刚如何升级版本号的姿势。<br>像 WordPress 这样的程序完全可以适应高版本的 PHP，使用 PHP7.0 或者 7.1 可以拥有更高的性能还可以降低负载，但是默认只有 php5.6 可以选，既然使用 php-fpm 方式驱动其实完全可以提供多版本 PHP 的选择。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>可以说 轻量应用服务器 是专门针对云计算入门新手或者只有轻量计算需求的用户，其对标的产品只会是 ECS 的共享型，当一到要使用 ECS 的企业型来发展性能、功能了，轻量应用服务器 的优势其实也就没有了。<br>如果你只是轻度使用云计算产品例如搭建一个博客、官网，如果你需要一个更快启动的轻量服务器，如果你需要一个纯粹的虚拟专用机，如果你并没有阿里云内网的需求，那么 轻量应用服务器 绝对是你最好的选择。</p><h3 id="评测"><a href="#评测" class="headerlink" title="评测"></a>评测</h3><p>我们对比的是华东1地域的安装了 CentOS 7.3 系统的 1核心1G内存的 ECS 和 轻量应用服务器 产品。看了评测就可以跟深入的了解，ECS 和 轻量应用服务器 的不同只在于概念而不在于性能。</p><h4 id="CPU-性能"><a href="#CPU-性能" class="headerlink" title="CPU 性能"></a>CPU 性能</h4><p>根据下面的对比可以发现，轻量应用服务器 的性能和 ECS 并没有差距，大家都是新一代的 Xeon CPU，同样的虚拟化技术。只不过 轻量应用服务器 不可以持续高负载占用。<br><strong>轻量应用服务器：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">System Benchmarks Index Values               BASELINE       RESULT    INDEX</span><br><span class="line">Dhrystone 2 using register variables         116700.0   34281977.0   2937.6</span><br><span class="line">Double-Precision Whetstone                       55.0       2962.7    538.7</span><br><span class="line">Execl Throughput                                 43.0       4860.0   1130.2</span><br><span class="line">File Copy 1024 bufsize 2000 maxblocks          3960.0    1054197.7   2662.1</span><br><span class="line">File Copy 256 bufsize 500 maxblocks            1655.0     283098.8   1710.6</span><br><span class="line">File Copy 4096 bufsize 8000 maxblocks          5800.0    3165160.0   5457.2</span><br><span class="line">Pipe Throughput                               12440.0    1734490.3   1394.3</span><br><span class="line">Pipe-based Context Switching                   4000.0     375732.0    939.3</span><br><span class="line">Process Creation                                126.0      18345.1   1456.0</span><br><span class="line">Shell Scripts (1 concurrent)                     42.4       6747.0   1591.3</span><br><span class="line">Shell Scripts (8 concurrent)                      6.0        921.5   1535.8</span><br><span class="line">System Call Overhead                          15000.0    2939229.7   1959.5</span><br><span class="line">                                                                   ========</span><br><span class="line">System Benchmarks Index Score                                        1649.5</span><br></pre></td></tr></table></figure></p><p><strong>ECS：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">System Benchmarks Index Values               BASELINE       RESULT    INDEX</span><br><span class="line">Dhrystone 2 using register variables         116700.0   34582858.9   2963.4</span><br><span class="line">Double-Precision Whetstone                       55.0       2984.8    542.7</span><br><span class="line">Execl Throughput                                 43.0       5118.8   1190.4</span><br><span class="line">File Copy 1024 bufsize 2000 maxblocks          3960.0    1073823.9   2711.7</span><br><span class="line">File Copy 256 bufsize 500 maxblocks            1655.0     284701.5   1720.3</span><br><span class="line">File Copy 4096 bufsize 8000 maxblocks          5800.0    3213933.6   5541.3</span><br><span class="line">Pipe Throughput                               12440.0    1722785.7   1384.9</span><br><span class="line">Pipe-based Context Switching                   4000.0     377999.7    945.0</span><br><span class="line">Process Creation                                126.0      18704.4   1484.5</span><br><span class="line">Shell Scripts (1 concurrent)                     42.4       6852.6   1616.2</span><br><span class="line">Shell Scripts (8 concurrent)                      6.0        937.2   1562.0</span><br><span class="line">System Call Overhead                          15000.0    2979190.8   1986.1</span><br><span class="line">                                                                   ========</span><br><span class="line">System Benchmarks Index Score                                        1673.4</span><br></pre></td></tr></table></figure></p><h4 id="磁盘性能"><a href="#磁盘性能" class="headerlink" title="磁盘性能"></a>磁盘性能</h4><p>由下面的磁盘跑分也可以看见，轻量应用服务器 的 20G SSD 系统盘 和 ECS 的 20G SSD 云盘的性能都是一致的，都是 1800 的iops，也都是 90M 左右的读写没有差距。<br><strong>轻量应用服务器：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">/dev/vda:</span><br><span class="line"> Timing cached reads:   21070 MB in  2.00 seconds = 10549.25 MB/sec</span><br><span class="line"> Timing buffered disk reads: 270 MB in  3.01 seconds =  89.76 MB/sec</span><br><span class="line"> [root@izbp1auqkyqtj4iozs7athz dev]# fio --bs=4k --ioengine=libaio --iodepth=1 --direct=1 --rw=read --time_based --runtime=600 --refill_buffers --norandommap --randrepeat=0 --group_reporting --name=fio-read --size=10G --filename=/dev/vda</span><br><span class="line">fio-read: (g=0): rw=read, bs=4K-4K/4K-4K/4K-4K, ioengine=libaio, iodepth=1</span><br><span class="line">fio-2.2.8</span><br><span class="line">Starting 1 process</span><br><span class="line">Jobs: 1 (f=1): [R(1)] [100.0% done] [7200KB/0KB/0KB /s] [1800/0/0 iops] [eta 00m:00s]</span><br><span class="line">fio-read: (groupid=0, jobs=1): err= 0: pid=24361: Sun Sep 10 15:04:27 2017</span><br><span class="line">  read : io=4206.7MB, bw=7179.3KB/s, iops=1794, runt=600004msec</span><br><span class="line">    slat (usec): min=3, max=165, avg= 6.78, stdev= 2.02</span><br><span class="line">    clat (usec): min=2, max=84748, avg=548.56, stdev=2727.93</span><br><span class="line">     lat (usec): min=131, max=84755, avg=555.59, stdev=2727.93</span><br><span class="line">    clat percentiles (usec):</span><br><span class="line">     |  1.00th=[  141],  5.00th=[  241], 10.00th=[  302], 20.00th=[  306],</span><br><span class="line">     | 30.00th=[  314], 40.00th=[  322], 50.00th=[  334], 60.00th=[  350],</span><br><span class="line">     | 70.00th=[  362], 80.00th=[  382], 90.00th=[  442], 95.00th=[  502],</span><br><span class="line">     | 99.00th=[ 1012], 99.50th=[23936], 99.90th=[40704], 99.95th=[42752],</span><br><span class="line">     | 99.99th=[68096]</span><br><span class="line">    bw (KB  /s): min= 4624, max= 7784, per=100.00%, avg=7182.85, stdev=181.15</span><br><span class="line">    lat (usec) : 4=0.01%, 250=6.25%, 500=88.69%, 750=3.79%, 1000=0.27%</span><br><span class="line">    lat (msec) : 2=0.36%, 4=0.06%, 10=0.03%, 20=0.04%, 50=0.48%</span><br><span class="line">    lat (msec) : 100=0.04%</span><br><span class="line">  cpu          : usr=0.50%, sys=1.81%, ctx=1076903, majf=1, minf=33</span><br><span class="line">  IO depths    : 1=100.0%, 2=0.0%, 4=0.0%, 8=0.0%, 16=0.0%, 32=0.0%, &gt;=64=0.0%</span><br><span class="line">     submit    : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     complete  : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     issued    : total=r=1076894/w=0/d=0, short=r=0/w=0/d=0, drop=r=0/w=0/d=0</span><br><span class="line">     latency   : target=0, window=0, percentile=100.00%, depth=1</span><br><span class="line">Run status group 0 (all jobs):</span><br><span class="line">   READ: io=4206.7MB, aggrb=7179KB/s, minb=7179KB/s, maxb=7179KB/s, mint=600004msec, maxt=600004msec</span><br><span class="line">Disk stats (read/write):</span><br><span class="line">  vda: ios=1078167/690, merge=0/399, ticks=598805/4230, in_queue=602927, util=98.01%</span><br></pre></td></tr></table></figure></p><p><strong>ECS：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">/dev/vdb:</span><br><span class="line"> Timing cached reads:   19778 MB in  2.00 seconds = 9901.01 MB/sec</span><br><span class="line"> Timing buffered disk reads: 270 MB in  3.02 seconds =  89.54 MB/sec</span><br><span class="line">[root@iZbp1258gr0v9v184jdqqkZ dev]# fio --bs=4k --ioengine=libaio --iodepth=1 --direct=1 --rw=read --time_based --runtime=600 --refill_buffers --norandommap --randrepeat=0 --group_reporting --name=fio-read --size=10G --filename=/dev/vdb</span><br><span class="line">fio-read: (g=0): rw=read, bs=4K-4K/4K-4K/4K-4K, ioengine=libaio, iodepth=1</span><br><span class="line">fio-2.2.8</span><br><span class="line">Starting 1 process</span><br><span class="line">Jobs: 1 (f=1): [R(1)] [100.0% done] [6940KB/0KB/0KB /s] [1735/0/0 iops] [eta 00m:00s]</span><br><span class="line">fio-read: (groupid=0, jobs=1): err= 0: pid=9552: Sun Sep 10 15:23:44 2017</span><br><span class="line">  read : io=4218.9MB, bw=7200.2KB/s, iops=1800, runt=600001msec</span><br><span class="line">    slat (usec): min=3, max=344, avg= 6.97, stdev= 2.32</span><br><span class="line">    clat (usec): min=1, max=85711, avg=546.79, stdev=4741.30</span><br><span class="line">     lat (usec): min=145, max=85717, avg=553.99, stdev=4741.28</span><br><span class="line">    clat percentiles (usec):</span><br><span class="line">     |  1.00th=[  147],  5.00th=[  149], 10.00th=[  151], 20.00th=[  153],</span><br><span class="line">     | 30.00th=[  155], 40.00th=[  159], 50.00th=[  167], 60.00th=[  199],</span><br><span class="line">     | 70.00th=[  229], 80.00th=[  241], 90.00th=[  249], 95.00th=[  270],</span><br><span class="line">     | 99.00th=[  374], 99.50th=[56576], 99.90th=[67072], 99.95th=[67072],</span><br><span class="line">     | 99.99th=[67072]</span><br><span class="line">    bw (KB  /s): min= 6380, max= 7624, per=100.00%, avg=7202.00, stdev=111.69</span><br><span class="line">    lat (usec) : 2=0.01%, 50=0.01%, 250=90.56%, 500=8.76%, 750=0.06%</span><br><span class="line">    lat (usec) : 1000=0.02%</span><br><span class="line">    lat (msec) : 2=0.02%, 4=0.01%, 10=0.01%, 20=0.01%, 50=0.01%</span><br><span class="line">    lat (msec) : 100=0.55%</span><br><span class="line">  cpu          : usr=0.50%, sys=1.98%, ctx=1080029, majf=0, minf=34</span><br><span class="line">  IO depths    : 1=100.0%, 2=0.0%, 4=0.0%, 8=0.0%, 16=0.0%, 32=0.0%, &gt;=64=0.0%</span><br><span class="line">     submit    : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     complete  : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     issued    : total=r=1080027/w=0/d=0, short=r=0/w=0/d=0, drop=r=0/w=0/d=0</span><br><span class="line">     latency   : target=0, window=0, percentile=100.00%, depth=1</span><br><span class="line">Run status group 0 (all jobs):</span><br><span class="line">   READ: io=4218.9MB, aggrb=7200KB/s, minb=7200KB/s, maxb=7200KB/s, mint=600001msec, maxt=600001msec</span><br><span class="line">Disk stats (read/write):</span><br><span class="line">  vdb: ios=1079640/0, merge=0/0, ticks=589523/0, in_queue=589382, util=98.27%</span><br></pre></td></tr></table></figure></p><p>文章转载自<a href="https://yq.aliyun.com/articles/202688" target="_blank" rel="noopener">https://yq.aliyun.com/articles/202688</a></p>]]></content>
    
    <summary type="html">
    
      总结：新手建议选择轻量，少折腾。
    
    </summary>
    
      <category term="VPS" scheme="https://www.lixint.me/categories/VPS/"/>
    
    
  </entry>
  
  <entry>
    <title>【良心推荐】阿里云香港1G1核轻量应用服务器24元/月</title>
    <link href="https://www.lixint.me/txamd.html"/>
    <id>https://www.lixint.me/txamd.html</id>
    <published>2018-12-09T09:50:09.000Z</published>
    <updated>2018-12-22T13:02:46.493Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月22日21:02</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><p><a href="https://s.click.taobao.com/2g4OnIw" style="color: #ff0033" title="阿里云香港" rel="noopener" target="_blank"><strong>阿里云轻量应用服务器</strong></a><br><a href="https://s.click.taobao.com/Rf6OnIw" style="color: #ff0033" title="阿里云学生机" rel="noopener" target="_blank"><strong>阿里云学生机9.5元/月</strong></a><br>轻量应用服务器普通的ECS云服务器的区别，可以看一下<a href="https://www.lixint.me/ecs.html">轻量应用服务器与ECS该选哪一个?</a><br>无意中发现了阿里云的轻量应用服务器，香港的比大陆的还便宜。仅仅24块钱一个月，虽买了一个月试试。<br><img src="https://i.loli.net/2018/12/14/5c13a3d9e6436.png" alt="3"></p><p>ping了一下，人在华北地区，ping香港这个延迟已经是很低了。<br>香港服务器的优点这里就不赘述了，作为轻量应用服务器，用来翻 * bi~可以拥有比较快的速度，峰值30M的带宽，1T的流量也完全够用。用来折腾搭建个人网站的话，又可以省去备案的烦恼。</p><h3 id="阿里云香港购买流程"><a href="#阿里云香港购买流程" class="headerlink" title="阿里云香港购买流程"></a>阿里云香港购买流程</h3><p>点击<a href="https://s.click.taobao.com/2g4OnIw" style="color: #ff0033" title="阿里云香港" rel="noopener" target="_blank"><strong>阿里云轻量应用服务器</strong></a>，点击立即购买<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/txamd/1544786700704.png" alt="1544786700704"></p><p>在下一个页面选择香港，当然还有新加坡服务器可选，这个也不错。<br>如果需要搭建博客或者其他的什么环境，可以直接选择需要的应用镜像。<br>不需要的话可以点击系统镜像选择需要的镜像即可。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/txamd/1544786758243.png" alt="1544786758243"></p><p>后面一切都很简单了。付款完成，等待自动跳转到控制台即可。注意默认只开放了80、443、22端口，如果需要开放其他端口，可以自行在控制台的防火墙选项中设置。<br>如果你不需要绑定域名。也不需要去看外面的世界。就是想要个云服务器折腾着玩。<br>可以考虑<a href="https://s.click.taobao.com/Rf6OnIw" style="color: #ff0033" title="阿里云学生机" rel="noopener" target="_blank"><strong>阿里云学生机</strong></a>，阿里云还是比较人性化，24岁以下免认证，直接获得学生机购买资格。<br>阿里云学生机提供两种配置，一种是普通的ECS，带宽只有1M。还有一种就是轻量应用服务器。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/txamd/1544787113318.png" alt="1544787113318"></p><p>9.5元/月，一年不过一百多。用作平时折腾或者学习用途足够了。需要的赶紧买起来。<br><a href="https://s.click.taobao.com/Rf6OnIw" style="color: #ff0033" title="阿里云学生机" rel="noopener" target="_blank"><strong>阿里云学生机页面</strong></a></p>]]></content>
    
    <summary type="html">
    
      24一个月的香港云服务器，带宽上线30M，1T流量，良心啊。
    
    </summary>
    
      <category term="VPS" scheme="https://www.lixint.me/categories/VPS/"/>
    
    
      <category term="博客搭建" scheme="https://www.lixint.me/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客新建文章并发布</title>
    <link href="https://www.lixint.me/article.html"/>
    <id>https://www.lixint.me/article.html</id>
    <published>2018-12-06T04:16:12.000Z</published>
    <updated>2018-12-18T03:13:44.763Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月18日11:13</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><blockquote class="blockquote-center"><p>欢迎加入博客搭建交流群（QQ群号60429576）==&gt;<a style="color:#ff0033" href="http://qq.cn.hn/g6Y" title="QQ群号60429576" rel="noopener" target="_blank"><strong>点击加入</strong></a>&lt;==</p></blockquote><h3 id="创建新文章"><a href="#创建新文章" class="headerlink" title="创建新文章"></a>创建新文章</h3><p>根目录命令行输入<code>hexo new &lt;模板&gt; &lt;文章名&gt;</code>新建文章<br>其中<code>&lt;模板&gt;</code>在<code>scaffolds</code>中，默认情况下有三个模板<code>post</code>、<code>draft</code>、<code>page</code></p><table><thead><tr><th>参数</th><th>功能</th><th>路径</th></tr></thead><tbody><tr><td>post</td><td>新建文章</td><td>/source/_posts/</td></tr><tr><td>draft</td><td>新建草稿</td><td>/source/_drafts/</td></tr><tr><td>page</td><td>新建页面（标签页，分类页等）</td><td>/source/</td></tr></tbody></table><p>通常情况下使用<code>hexo new post &lt;title&gt;</code>即可，注意这里的<code>title</code>不是文章名，具体文章中显示的文章标题可以在文章文件中修改，例如：我这里新建一篇文章，title为article<br>命令行输入<code>hexo new post article</code><br>此时在<code>source/_posts/</code>文件夹中多了一个<code>article.md</code>文件。打开可以看到如下内容：<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/article/1544072787521.png" alt="1544072787521"></p><p>文章内容中两条<code>---</code>之间的内容为文章的配置内容，可以在其中设置标签、分类等。其中的<code>title</code>为文章发布后文章页面显示的标题，例如我们修改一下tittle为：Hexo博客文章发布<br>而<code>.md</code>文件的名字，也就是我们新建文章时输入的名字，是作为文章页面链接中显示的名字，例如，本篇文章的文件名为：<code>article.md</code>，文章内设置的文章标题为<code>Hexo博客新建文章并发布</code>，那么本篇文章的链接就是<code>https://www.lixint.me/article.html</code></p><h4 id="文章模板"><a href="#文章模板" class="headerlink" title="文章模板"></a>文章模板</h4><p>在新建文章中使用的<code>post</code>参数，就是模板的名称，在使用<code>hexo new post &lt;文件名&gt;</code>命令进行新建文章时，系统会自动在<code>scaffolds</code>文件夹中搜寻名为<code>post</code>的文件，根据其中的内容生成新的<code>.md</code>文章文件。后续随着配置项的增多，可以自行设置不同类型的模板。例如本篇文章的模板如下：<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/article/1544073389878.png" alt="1544073389878"></p><p>其中的<code>title</code>跟<code>data</code>会在生成文件时自动填写。利用此模板生成的文章文件，只需要进行对应项目的填写即可。例如本篇文章的配置信息如下：<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/article/1544073504510.png" alt="1544073504510"></p><h4 id="给文章添加分类和模板"><a href="#给文章添加分类和模板" class="headerlink" title="给文章添加分类和模板"></a>给文章添加分类和模板</h4><p>通过对文件头部配置信息中<code>tags</code> 与<code>categories</code>项的修改可以设置文章的标签及分类。<br>其中标签可以按格式贴现设置多个：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: Hexo博客新建文章并发布</span><br><span class="line">date: 2018-12-06 12:16:12</span><br><span class="line">tags:</span><br><span class="line"> - Hexo</span><br><span class="line"> - Markdown</span><br><span class="line">categories: 搭建博客</span><br></pre></td></tr></table></figure></p><h4 id="在博文中添加图片"><a href="#在博文中添加图片" class="headerlink" title="在博文中添加图片"></a>在博文中添加图片</h4><p>目前有三种方法像博文中添加图片：</p><h5 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h5><p>命令行输入<code>npm install hexo-asset-image --save</code>安装插件<br>在<code>根目录/source</code>目录下新建一个<code>img</code>文件夹，将需要插入的图片放到里面<br>在文章中引用图片时图片使用格式<code>![header](img/xxx.jpg)</code>进行引用图片。</p><h5 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h5><p>在<a style="color:#9900ff"><strong>博客配置文件</strong></a>中搜索<code>post_asset_folder</code>项，设置为<code>true</code><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/article/1544077136676.png" alt="1544077136676"></p><p>这样在创建文章时会自动在文章<code>.md</code>所在目录<code>/source/_posts</code>文件夹内生成一个与文章同名的文件夹。例如新建文章<code>hexo new post example</code>则会生成一个<code>example.md</code>文件与一个名为<code>example</code>的文件夹。<br>把example这个博文需要展示的图片放在example文件夹目录下；<br>文章内使用<code>[% asset_img slug [title] %]</code>（将方括号][替换为花括号}{）的格式进行插入图片，例如我要插入一个名为<code>1.jpg</code>的图片，写文章时就应该填写<br>​     <code>[% asset_img 1.jpg 图片1 %]</code></p><h5 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h5><p>前两种方法尽管在上传时很方便，但是在插入图片时并不是很方便，现在很多Markdown编辑器在插入图片是非常方便，截图直接粘贴、现有的图片文件直接拖入都可以实现插入图片，而不是使用代码进行插入。<br>但是这样插入的图片在上传时并不会被上传，这样就导致了博客中文章图片的连接还是本地路径的格式。<br>于是博主自己写了一个Python脚本，在文章完成后上传前，通过脚本自动将文章中的图片上传至腾讯云对象存储（腾讯云每个月都有一定的免费额度）或者SMMS图床，文章中图片链接替换。这样既不会占用Github Pages空间，又能方便地插入图片。<br>对于脚本的使用，可以到==&gt;<a href="https://www.lixint.me/markdownpic.html">Hexo博文图片自动上传腾讯云、SMMS图床并替换博文内图片链接</a>&lt;==查看</p>]]></content>
    
    <summary type="html">
    
      从零开始搭建博客之四，新建文章并发布
    
    </summary>
    
      <category term="博客搭建" scheme="https://www.lixint.me/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://www.lixint.me/tags/Hexo/"/>
    
      <category term="Markdown" scheme="https://www.lixint.me/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Python自带模块命令记录</title>
    <link href="https://www.lixint.me/pythoncommand.html"/>
    <id>https://www.lixint.me/pythoncommand.html</id>
    <published>2018-12-06T01:28:47.000Z</published>
    <updated>2018-12-16T09:08:52.561Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月16日17:08</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><h4 id="获取文件名-后缀名"><a href="#获取文件名-后缀名" class="headerlink" title="获取文件名/后缀名"></a>获取文件名/后缀名</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">file = <span class="string">"Hello.py"</span></span><br><span class="line"><span class="comment"># 获取前缀（文件名称）</span></span><br><span class="line"><span class="keyword">assert</span> os.path.splitext(file)[<span class="number">0</span>] == <span class="string">"Hello"</span></span><br><span class="line"><span class="comment"># 获取后缀（文件类型）</span></span><br><span class="line"><span class="keyword">assert</span> os.path.splitext(file)[<span class="number">-1</span>] == <span class="string">".py"</span></span><br><span class="line"><span class="keyword">assert</span> os.path.splitext(file)[<span class="number">-1</span>][<span class="number">1</span>:] == <span class="string">"py"</span></span><br></pre></td></tr></table></figure><h4 id="判断文件-目录是否存在"><a href="#判断文件-目录是否存在" class="headerlink" title="判断文件/目录是否存在"></a>判断文件/目录是否存在</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.path.exists(<span class="string">"1.txt"</span>)</span><br><span class="line"><span class="comment">#True</span></span><br><span class="line">os.path.exists(<span class="string">"dirpath"</span>)</span><br><span class="line"><span class="comment">#True</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      初学Python，一些自带库函数都没怎么用过，对平时写无用脚本用到的函数进行记录。
    
    </summary>
    
      <category term="Python学习" scheme="https://www.lixint.me/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Python" scheme="https://www.lixint.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text3及配置Python使用环境</title>
    <link href="https://www.lixint.me/sublimetext.html"/>
    <id>https://www.lixint.me/sublimetext.html</id>
    <published>2018-12-05T13:30:10.000Z</published>
    <updated>2018-12-16T09:06:44.700Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月16日17:06</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><h3 id="安装Package-Control"><a href="#安装Package-Control" class="headerlink" title="安装Package Control"></a>安装Package Control</h3><p>使用Ctrl+`（tab键上面）(或View &gt; Show Console menu) 打开Sublime Text控制台，将下面的Python代码粘贴到控制台里:  <a href="https://packagecontrol.io/installation#st3" target="_blank" rel="noopener">代码出处</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request,os,hashlib; h = <span class="string">'6f4c264a24d933ce70df5dedcf1dcaee'</span> + <span class="string">'ebe013ee18cced0ef93d5f746d80ef60'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.replace(<span class="string">' '</span>, <span class="string">'%20'</span>)).read(); dh = hashlib.sha256(by).hexdigest(); print(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h)) <span class="keyword">if</span> dh != h <span class="keyword">else</span> open(os.path.join( ipp, pf), <span class="string">'wb'</span> ).write(by)</span><br></pre></td></tr></table></figure></p><p>如果在<code>Perferences-&gt;package settings</code>中看到<code>package control</code>这一项，则表明安装成功。</p><h3 id="用Package-Control查看已安装的插件"><a href="#用Package-Control查看已安装的插件" class="headerlink" title="用Package Control查看已安装的插件"></a><strong>用Package Control查看已安装的插件</strong></h3><p>1.按下Ctrl+Shift+P调出命令面板。<br>2.输入install 调出 Install Package 选项并回车。等待。<br>在列表中选中要安装的插件，或者输入插件名(比如要安装IMESupport插件，则输入IMESupport，它会实时过滤筛选结果)，根据命令面板中的过滤结果，选择要安装的插件。<br>安装中文插件。搜索localiza，在搜索出来的列表中选择点击安装<br>如果安装失败的话可以到<a href="https://github.com/rexdf/ChineseLocalization" rel="noopener" target="_blank">汉化项目页面</a>下载源码，重命名文件夹为<code>ChineseLocalization</code>，放到<code>C:\Users\用户名\AppData\Roaming\Sublime Text 3\Packages</code>中。</p><h3 id="禁用-Sublime-Text-3-检测新版本"><a href="#禁用-Sublime-Text-3-检测新版本" class="headerlink" title="禁用 Sublime Text 3 检测新版本"></a>禁用 Sublime Text 3 检测新版本</h3><p>设置 Preferences -&gt; Settings-User<br>添加 <code>&quot;update_check&quot;: false</code></p><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><p>推荐 <code>Boxy</code>   Ctrl(Mac下Cmd)+Shift+P</p><ol><li><code>install package</code> -&gt; <code>Boxy Theme</code></li><li><code>install package</code> -&gt; <code>A File Icon</code></li></ol><h3 id="其他插件"><a href="#其他插件" class="headerlink" title="其他插件"></a>其他插件</h3><h4 id="SublimeTmpl-新建文件模板"><a href="#SublimeTmpl-新建文件模板" class="headerlink" title="SublimeTmpl 新建文件模板"></a>SublimeTmpl 新建文件模板</h4><p><code>Package settings - sublime tmpl - settings User</code>设置，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;  </span><br><span class="line">            &quot;disable_keymap_actions&quot;: false, // &quot;all&quot;; &quot;html,css&quot;  </span><br><span class="line">            &quot;date_format&quot; : &quot;%Y-%m-%d %H:%M:%S&quot;,  </span><br><span class="line">            &quot;attr&quot;: &#123;  </span><br><span class="line">                &quot;author&quot;: &quot;lixint&quot;,  </span><br><span class="line">                &quot;email&quot;: &quot;lixint8@gmail.com&quot;,  </span><br><span class="line">                &quot;link&quot;: &quot;https://github.com/lixint/&quot;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><p><code>Package settings - sublime tmpl - key bindings-user</code>设置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[   </span><br><span class="line">    &#123;  </span><br><span class="line">        &quot;caption&quot;: &quot;Tmpl: Create python&quot;, &quot;command&quot;: &quot;sublime_tmpl&quot;,  </span><br><span class="line">        &quot;keys&quot;: [&quot;ctrl+alt+p&quot;], &quot;args&quot;: &#123;&quot;type&quot;: &quot;python&quot;&#125;  </span><br><span class="line">    &#125;,  </span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p>这样用快捷键<code>ctrl+alt+p</code>可以快捷新建py文件并自动填写文件头</p><h4 id="侧边栏字体大小修改插件PackageResourceViewer"><a href="#侧边栏字体大小修改插件PackageResourceViewer" class="headerlink" title="侧边栏字体大小修改插件PackageResourceViewer"></a>侧边栏字体大小修改插件<strong>PackageResourceViewer</strong></h4><p>修改方法：<br>插件安装完后<code>Ctrl+alt+P</code>打开搜索栏，搜索PackageResourceViewer名称，选择open resource<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/sublimetext/1544008082057.png" alt="1544008082057"></p><p>在跳出的搜索框搜索主题名<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/sublimetext/1544007925716.png" alt="1544007925716"></p><p>然后再搜索主题名下的主题文件的名称<br>打开，出现主题配置文件，搜索修改需要的参数即可。</p><h4 id="安装Anaconda"><a href="#安装Anaconda" class="headerlink" title="安装Anaconda"></a>安装Anaconda</h4><p>1.相关配置均需在”Preferences”-“Package settings”-“Anaconda”中选择<br>1.1“Settings-Default”中，手动设置python解释器的路径，然后保存。<br>设置python_interpreter为python解释器路径<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/sublimetext/1544009509138.png" alt="1544009509138"></p><p>Settings-User 设置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;python_interpreter&quot;:&quot;E:/Program/Anaconda3/python.exe&quot;,</span><br><span class="line">&quot;suppress_word_completions&quot;: true,</span><br><span class="line">&quot;suppress_explicit_completions&quot;: true,</span><br><span class="line">&quot;complete_parameters&quot;: true,</span><br><span class="line">&quot;swallow_startup_errors&quot;: true,</span><br><span class="line">&quot;anaconda_linting&quot;:false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>工具-编译系统选择anaconda<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/sublimetext/1544010202338.png" alt="1544010202338"></p><h4 id="安装sublimeREPL实现sublime内交互式命令行（使用anaconda环境）"><a href="#安装sublimeREPL实现sublime内交互式命令行（使用anaconda环境）" class="headerlink" title="安装sublimeREPL实现sublime内交互式命令行（使用anaconda环境）"></a>安装sublimeREPL实现sublime内交互式命令行（使用anaconda环境）</h4><p>正常安装步骤，安装完成后，<code>首选项-浏览插件目录\SublimeREPL\config</code><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/sublimetext/1544011647671.png" alt="1544011647671"></p><p>新建文件夹，<code>Python37</code>(根据anaconda的python环境版本确定)，将Python文件夹中的文件全部复制到<code>Python37</code>文件夹。<br>打开<code>Main.sublime-menu</code>文件，替换所有的Python为Python37（改个名字）除了各部分的<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"syntax"</span>: <span class="string">"Packages/Python/Python.tmLanguage"</span>,</span><br></pre></td></tr></table></figure></p><p>中的Python不替换。<br>打开Main.sublime-menu文件，将所有“cmd”：后的路径改为anaconda的python环境路径(注意路径中的斜杠)<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"cmd"</span>: [<span class="string">"D:/anaconda/envs/py3k/python.exe"</span>, <span class="string">"-i"</span>, <span class="string">"-u"</span>],</span><br></pre></td></tr></table></figure></p><p>打开Default.sublime-commands文件，替换所有Python为Python37<br>快捷键添加如下代码，同理可以添加ipython运行。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//anaconda环境下运行sublimeREPL_pdb</span><br><span class="line">&#123;&quot;keys&quot;:[&quot;f6&quot;],</span><br><span class="line">  &quot;caption&quot;: &quot;SublimeREPL: Python37 - PDB current file&quot;,</span><br><span class="line">  &quot;command&quot;: &quot;run_existing_window_command&quot;, &quot;args&quot;:</span><br><span class="line">  &#123;&quot;id&quot;: &quot;repl_Python37_pdb&quot;,</span><br><span class="line">  &quot;file&quot;: &quot;config/Python37/Main.sublime-menu&quot;&#125;</span><br><span class="line">&#125;,</span><br><span class="line">//anaconda环境下运行sublimeREPL_run</span><br><span class="line">&#123;&quot;keys&quot;:[&quot;f5&quot;],</span><br><span class="line">  &quot;caption&quot;: &quot;SublimeREPL: Python37 - RUN current file&quot;,</span><br><span class="line">  &quot;command&quot;: &quot;run_existing_window_command&quot;, &quot;args&quot;:</span><br><span class="line">  &#123;&quot;id&quot;: &quot;repl_Python37_run&quot;,</span><br><span class="line">  &quot;file&quot;: &quot;config/Python37/Main.sublime-menu&quot;&#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><p>pdb常用命令<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/sublimetext/1544017405048.png" alt="1544017405048"></p><h3 id="快捷键设置"><a href="#快捷键设置" class="headerlink" title="快捷键设置"></a>快捷键设置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">/*光标右侧为括号一类的字符时，回车键移动光标（回车的话用shift</span> <span class="string">enter）*/</span></span><br><span class="line">    <span class="string">&#123;"keys":</span> <span class="string">["enter"],</span> <span class="string">"command"</span><span class="string">:</span> <span class="string">"move"</span><span class="string">,</span> <span class="string">"args"</span><span class="string">:</span> <span class="string">&#123;"by":</span> <span class="string">"characters"</span><span class="string">,</span> <span class="string">"forward"</span><span class="string">:</span> <span class="literal">true</span><span class="string">&#125;,</span> <span class="string">"context"</span><span class="string">:</span></span><br><span class="line">        <span class="string">[</span></span><br><span class="line">            <span class="string">&#123;</span> <span class="string">"key"</span><span class="string">:</span> <span class="string">"following_text"</span><span class="string">,</span> <span class="string">"operator"</span><span class="string">:</span> <span class="string">"regex_contains"</span><span class="string">,</span> <span class="string">"operand"</span><span class="string">:</span> <span class="string">"^[)\\]\\&gt;\\'\\\"\\ %&gt;\\&#125;\\;\\,]"</span><span class="string">,</span> <span class="string">"match_all"</span><span class="string">:</span> <span class="literal">true</span> <span class="string">&#125;,</span></span><br><span class="line">            <span class="string">&#123;</span> <span class="string">"key"</span><span class="string">:</span> <span class="string">"preceding_text"</span><span class="string">,</span> <span class="string">"operator"</span><span class="string">:</span> <span class="string">"not_regex_match"</span><span class="string">,</span> <span class="string">"operand"</span><span class="string">:</span> <span class="string">"^.*\\&#123;$"</span><span class="string">,</span> <span class="string">"match_all"</span><span class="string">:</span> <span class="literal">true</span>  <span class="string">&#125;</span></span><br><span class="line">        <span class="string">]</span></span><br><span class="line">    <span class="string">&#125;,</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      最近重装了电脑上的Python跟Sublime Text，换用了Anaconda环境，把重新折腾Sublime Text的过程记录下来。
    
    </summary>
    
      <category term="Python学习" scheme="https://www.lixint.me/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Python" scheme="https://www.lixint.me/tags/Python/"/>
    
      <category term="Sublime Text" scheme="https://www.lixint.me/tags/Sublime-Text/"/>
    
      <category term="Anaconda" scheme="https://www.lixint.me/tags/Anaconda/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博文图片自动上传腾讯云、SMMS图床并替换博文内图片链接</title>
    <link href="https://www.lixint.me/markdownpic.html"/>
    <id>https://www.lixint.me/markdownpic.html</id>
    <published>2018-11-30T11:06:28.000Z</published>
    <updated>2018-12-22T13:04:02.670Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月22日21:04</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><blockquote class="blockquote-center"><p>欢迎加入博客搭建交流群（QQ群号60429576）==&gt;<a style="color:#ff0033" href="http://qq.cn.hn/g6Y" title="QQ群号60429576" rel="noopener" target="_blank"><strong>点击加入</strong></a>&lt;==</p></blockquote><h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>　　刚开始折腾Hexo博客的时候，各种修改各种查，发现网上许多教程已经过时了，于是乎决定把自己搭建博客的过程整理成文章。在用Typora写文章的时候发现，文章里插入的图片是个问题，尤其是在用截图的时候，习惯上都是截图直接粘贴进去。但是文章在发布的时候图片的地址还是用的本地路径，导致了图片显示有问题。<br>　　网上查了一下，大都是几种解决方法：插入后修改为相对路径，把图片放到<code>source</code>文件夹里；安装插件，渲染文章的时候自动替换图片链接。这两种都需要把图片放到Github Pages空间里，长此以往占用的内存会越来越大；还有就是使用在线的Markdown编辑器，可以实时把图片上传，这种还不错，但没试过截图插入行不行；再者就是提前把图片上传到图床，插入时就用图床的链接。感觉这几种解决方法都不是很完美，于是用我粗糙的Python技能写了一个脚本，用来在发布文章之前自动把文章中的图片上传到腾讯云存储对象或者SMMS图床，并且把返回来的链接替换掉原来的链接。</p><h3 id="关于脚本"><a href="#关于脚本" class="headerlink" title="关于脚本"></a>关于脚本</h3><p><a href="https://github.com/lixint/img_upload_for_Markdown" rel="noopener" target="_blank">项目Github链接</a><br>工作流程很简单，在运行脚本后脚本会用正则表达式匹配<code>!</code>开头<code>)</code>的链接（所以用Html语法插入的图片不管用），然后提取出里面的本地图片地址，根据运行脚本时候的选择上传到腾讯云存储对象或者SMMS图床。<br>然后根据反馈回来的图片链接再进行替换。</p><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><p>下载<code>uploadparser.py`、`imgupload`、`UploadImg.ini</code>放置在本地博客根目录。如果使用腾讯云cos的话先填好<code>secret_id</code>、<code>secret_key</code>、<code>region</code>、<code>Bucket</code></p><p>腾讯云cos配置需要的各种<code>key</code>的获取方式参看==&gt;<a href="https://cloud.tencent.com/document/product/436/10074" rel="noopener" title="" target="_blank">腾讯云对象存储官方文档</a><br>博客根目录命令行格式<code>python imgupload tx/smms/clearline &lt;filename.md&gt;</code><br>例如：<code>python imgupload tx example.md</code>  上传至腾讯云。</p><h4 id="相关依赖"><a href="#相关依赖" class="headerlink" title="相关依赖"></a>相关依赖</h4><p>脚本使用<code>Python 3</code>编写<br>第三方依赖：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">requests</span><br><span class="line">cos-python-sdk-v5    使用腾讯云上传需要，github地址https://github.com/tencentyun/cos-python-sdk-v5</span><br></pre></td></tr></table></figure></p><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p>1.命令： <code>smms</code>、<code>tx</code>、<code>clearline</code><br>2.文件名需输入后缀<code>.md</code>，非Markdown语法暂不支持。<br>3.上传腾讯对象存储需要自己填写<code>secret_id</code>、<code>secret_key</code>、<code>region</code>、<code>Bucket</code>，上传腾讯云对象存储默认建立一个以文件名命名的文件夹存放图片。</p><h4 id="存在问题"><a href="#存在问题" class="headerlink" title="存在问题"></a>存在问题</h4><p>1.错误处理不明朗，出错时只能慢慢查。<br>2.<del>遇到文章中带<code>js</code>脚本代码的，容易误处理。其他的非图片链接的<code>!</code>开头<code>)</code>结尾的字符串都会误处理。</del>（现已修正）</p><h4 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h4><p><img src="https://i.loli.net/2018/12/15/5c14e4dc68061.gif" alt="picupload"></p>]]></content>
    
    <summary type="html">
    
      为了方便发博文，我自己写了一个Python脚本来上传并替换Markdown博文中图片链接。
    
    </summary>
    
      <category term="Python学习" scheme="https://www.lixint.me/categories/Python%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Hexo" scheme="https://www.lixint.me/tags/Hexo/"/>
    
      <category term="Markdown" scheme="https://www.lixint.me/tags/Markdown/"/>
    
      <category term="Python" scheme="https://www.lixint.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客主题安装及Next主题个性化修改</title>
    <link href="https://www.lixint.me/hexo-theme-diy.html"/>
    <id>https://www.lixint.me/hexo-theme-diy.html</id>
    <published>2018-11-29T13:07:49.000Z</published>
    <updated>2018-12-16T09:03:13.514Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月16日17:03</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><blockquote class="blockquote-center"><p>欢迎加入博客搭建交流群（QQ群号60429576）==&gt;<a style="color:#ff0033" href="http://qq.cn.hn/g6Y" title="QQ群号60429576" rel="noopener" target="_blank"><strong>点击加入</strong></a>&lt;==</p></blockquote><p><strong><a style="color:#ff0033">写在最前面：</a></strong><br>1.在修改时请注意<a style="color:#ff0033"><strong>博客配置文件</strong></a>与<a style="color:#9900ff"><strong>主题配置文件</strong></a>的区别：<a style="color:#ff0033"><strong>博客配置文件</strong></a>是指博客根目录下的<code>_config.yml</code>文件，<br><a style="color:#9900ff"><strong>主题配置文件</strong></a>是指<code>/themes/主题名/</code>路径下的<code>_config.yml</code>文件，例如我使用的主题为next主题，<a style="color:#9900ff"><strong>主题配置文件</strong></a>为<code>/themes/next/_config.yml</code>。<br>2.文内所有命令行命令全部是在<strong>博客根目录打开命令行</strong>下输入的。根目录下目录结构为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure></p><p>默认情况下，命令行输入命令<code>ls</code>显示如下：<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543541234579.png" alt="1543541234579"></p><h2 id="index">目录</h2><table><thead><tr><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td><a href="#设置作者头像">设置作者头像</a></td><td><a href="#设置作者昵称与站点描述">设置作者昵称与站点描述</a></td><td><a href="#设置代码高亮主题">设置代码高亮主题</a></td><td><a href="#侧边栏社交链接">侧边栏社交链接</a></td></tr><tr><td><a href="#开启打赏功能">开启打赏功能</a></td><td><a href="#修改打赏字体不闪动">修改打赏字体不闪动</a></td><td><a href="#开启友情链接or侧边栏推荐阅读">开启友情链接or侧边栏推荐阅读</a></td><td><a href="#设置RSS">设置RSS</a></td></tr><tr><td><a href="#设置网站图标">设置网站图标</a></td><td><a href="#实现全站及文章字数统计及阅读时长">实现全站及文章字数统计及阅读时长</a></td><td><a href="#添加顶部加载条">添加顶部加载条</a></td><td><a href="#自定义鼠标样式">自定义鼠标样式</a></td></tr><tr><td><a href="#实现点击出现桃心">实现点击出现桃心</a></td><td><a href="#修改网页底部的小图标">修改网页底部的小图标</a></td><td><a href="#去掉页面底部的强力驱动信息及设置备案信息">去掉页面底部的强力驱动信息及设置备案信息</a></td><td><a href="#添加动态背景">添加动态背景</a></td></tr><tr><td><a href="#增加波浪背景动画">增加波浪背景动画</a></td><td><a href="#forkme">在右上角实现fork me on github按钮</a></td><td><a href="#增加回到顶部按钮及显示当前浏览进度">增加回到顶部按钮及显示当前浏览进度</a></td><td><a href="#修改顶部菜单与下方信息栏的间隙大小">修改顶部菜单与下方信息栏的间隙大小</a></td></tr><tr><td><a href="#网站标题栏背景颜色">网站标题栏背景颜色</a></td><td><a href="#为博客加上萌萌的">为博客加上萌萌的</a></td><td><a href="#添加DaoVoice实现在线联系">添加DaoVoice实现在线联系</a></td><td><a href="#主页文章添加阴影效果">主页文章添加阴影效果</a></td></tr><tr><td><a href="#增加本地搜索功能">增加本地搜索功能</a></td><td><a href="#修改语言">修改语言</a></td><td><a href="#修改菜单及创建分类页">修改菜单及创建分类页</a></td><td><a href="#修改主题风格">修改主题风格</a></td></tr></tbody></table><h2 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择"></a>主题选择</h2><p>可以到<a href="https://hexo.io/themes/" rel="noopener" title="Nexo官方主题页" target="_blank">Nexo官方主题页</a>选择自己喜欢的主题，每个主题的使用方法略有不同，所以如果你是跟我一样的小白，建议使用流行热门的主题，这样出现问题网上基本都可以搜到解决方法。<br>推荐Next主题，我的博客使用的就是Next的主题</p><h2 id="Next主题修改"><a href="#Next主题修改" class="headerlink" title="Next主题修改"></a>Next主题修改</h2><p><span id="主题安装"></span></p><h3 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h3><p><a href="https://theme-next.iissnan.com/getting-started.html" rel="noopener" title="Next主题文档页面" target="_blank">Next主题文档页面</a><br>目前Next主题的项目分成了两个项目，一个是5.1.4版本以下的，一个是一直更新的，现在已经更新到了6.5，建议直接用最新的，最新版本的主题已经把很多常用的功能集成了，用起来很方便。本篇文章是基于Next 6.5进行的修改与展示。<br><a href="https://github.com/iissnan/hexo-theme-next" rel="noopener" title="Next主题项目页面(v5.1.4)" target="_blank">Next主题项目页面(v5.1.4)</a><br><a href="https://github.com/theme-next/hexo-theme-next" rel="noopener" title="v6.5页面" target="_blank">v6.5版本页面</a><br><strong>方法1</strong>：项目页面点击releases，找到最新版本的主题zip包并下载，解压放到<code>博客根目录/themes</code>重命名文件夹为next，两版本通用。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181128193847.png" alt="blog20181128193847"></p><p><strong>方法2</strong>：博客<strong>根目录</strong>打开命令行，用5.1版本输入命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p><p>6.5版本输入命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181128194258.png" alt="blog20181128194258"><br>安装完成后，打开<a style="color:#ff0033"><strong>博客配置文件</strong></a>修改最上方的<code>theme</code>项为<code>next</code>。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543498259558.png" alt="1543498259558"></p><p><a style="color:#9900ff"><strong>主题配置文件</strong></a>是<code>根目录/themes/next</code>目录下的<code>_config.yml</code>文件。<br>修改完成后命令行输入<code>hexo s</code>本地运行一下看是否生效。</p><h3 id="主题修改"><a href="#主题修改" class="headerlink" title="主题修改"></a>主题修改</h3><p><span id="修改语言"></span></p><h4 id="修改语言"><a href="#修改语言" class="headerlink" title="修改语言"></a>修改语言</h4><p>修改<a style="color:#ff0033"><strong>博客配置文件</strong></a>下的<code>language</code>项为<code>zh-CN</code><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181128200611.png" alt="blog20181128200611"></p><p>这里要<strong>注意</strong>一下，看一下主题文件夹内的<code>languange</code>文件夹中中文的配置文件叫什么名字，Next主题有些版本的叫<code>zh-Hans</code>那这里就填<code>zh-Hans</code>，Next最新版本中用的是<code>zh-CN</code>，故这里填写<code>zh-CN</code><br><span id="修改菜单及创建分类页"></span></p><h4 id="修改菜单及创建分类页"><a href="#修改菜单及创建分类页" class="headerlink" title="修改菜单及创建分类页"></a>修改菜单及创建分类页</h4><p>修改<a style="color:#9900ff"><strong>主题配置文件</strong></a>下的<code>menu</code>项，按需要打开菜单。例如我需要把<code>标签</code>页面打开，就把<code>tags</code>项前面的<code>#</code>去掉就行了。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543498503630.png" alt="1543498503630"></p><p><code>Hexo s</code>运行一下可以看到菜单多了一个标签项。但是此时还不行，只是有了入口。点击标签菜单，会显示：<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543498782215.png" alt="1543498782215"></p><p>因为只有了入口，但还没有标签页面，需要在命令行输入如下命令：<code>hexo new page tags</code>新建出标签页。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543498826765.png" alt="1543498826765"></p><p>同样的道理，开启分类页的时候要输入<code>hexo new page categories</code>来新建出分类页。<br><span id="修改主题风格"></span></p><h4 id="修改主题风格"><a href="#修改主题风格" class="headerlink" title="修改主题风格"></a>修改主题风格</h4><p>Next自带四种主题风格，可以在<a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索Scheme项，将需要的风格前的#去掉，注意只能开启一个风格。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181128201721.png" alt="blog20181128201721"></p><p><span id="设置作者头像"></span></p><h4 id="设置作者头像"><a href="#设置作者头像" class="headerlink" title="设置作者头像"></a>设置作者头像</h4><p>编辑<a style="color:#9900ff"><strong>主题配置文件</strong></a>，搜索修改字段 <code>avatar</code>， 值设置成头像的链接地址。可以设置成在线的图片地址。也可以把图片放在本地。<br><strong>方法1：</strong><br>在线图片设置：现在有一张网络图片， 使用百度上随便搜的。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/avatar.jpg" alt="avatar"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543499047117.png" alt="1543499047117"></p><p><strong>方法2：</strong><br>本地设置：放置在<code>source/images</code>目录下，设置为<code>url: /images/avatar.jpg</code><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543499063167.png" alt="1543499063167"></p><p>这个<code>rounded</code>项可以设置头像为圆形，设置为<code>ture</code>后会自动根据头像的尺寸将头像变化为圆形或者椭圆，头像图片为正方形的话则为圆形。长方形的话长宽相差越大，椭圆越明显。<br>设置<code>opacity</code>的值控制头像的透明度，值为0 - 1。<br><code>rotated</code>项为头像旋转，设置为<code>true</code>，则鼠标指到头像时头像会旋转。<br><span id="设置作者昵称与站点描述"></span></p><h4 id="设置作者昵称与站点描述"><a href="#设置作者昵称与站点描述" class="headerlink" title="设置作者昵称与站点描述"></a>设置作者昵称与站点描述</h4><p>这个比较简单。设置<a style="color:#ff0033"><strong>博客配置文件</strong></a>中的<code>author</code>为昵称，<code>description</code>为描述。<br>同理，<code>subtitle</code>为副标题，<code>keywords</code>为关键词，<code>timezone</code>为时区，可以按需求填写。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543499164417.png" alt="1543499164417"></p><p><span id="设置代码高亮主题"></span></p><h4 id="设置代码高亮主题"><a href="#设置代码高亮主题" class="headerlink" title="设置代码高亮主题"></a>设置代码高亮主题</h4><p>NexT 使用 <a href="https://github.com/chriskempson/tomorrow-theme" rel="noopener" title="Tomorrow Theme" target="_blank">Tomorrow Theme</a>作为代码高亮，共有5款主题供你选择。 NexT 默认使用的是 白色的 <code>normal</code> 主题，可选的值有 <code>normal</code>，<code>night</code>， <code>night blue</code>， <code>night bright</code>， <code>night eighties</code><br>更改 <a style="color:#9900ff"><strong>主题配置文件</strong></a>中的<code>highlight_theme</code> 字段，将其值设定成你所喜爱的高亮主题即可。<br><span id="侧边栏社交链接"></span></p><h4 id="侧边栏社交链接"><a href="#侧边栏社交链接" class="headerlink" title="侧边栏社交链接"></a>侧边栏社交链接</h4><p>侧栏社交链接的修改包含两个部分， 配置在 <a style="color:#9900ff"><strong>主题配置文件</strong></a> 中。<code>social</code>字段为连接，格式为<code>显示文本: 链接地址 || Font Awesome图标名称</code><br>例如：<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181128205617.png" alt="blog20181128205617"></p><p><code>图标名称</code> 是 Font Awesome 图标的名字（不必带 <code>fa-</code> 前缀）。<code>enable</code> 选项用于控制是否显示图标，你可以设置成 <code>false</code> 来去掉图标。例如: <code>百度: https://baidu.com || firefox</code><br>Font Awesome图标可以到<a href="www.fontawesome.com.cn" rel="external nofollow" title="Font Awesome" style="color:#ff0033">Font Awesome</a>查看<br><span id="开启打赏功能"></span></p><h4 id="开启打赏功能"><a href="#开启打赏功能" class="headerlink" title="开启打赏功能"></a>开启打赏功能</h4><p>主题自带支付宝跟微信及比特币打赏功能，只需要<a style="color:#9900ff"><strong>主题配置文件</strong></a> 中填入 <code>微信</code>和 <code>支付宝</code> 收款二维码图片地址即可开启该功能。<br>搜索<code>reward字段</code>，将<code>wechatpay</code>及<code>alipay</code>字段前面的<code>#</code>去掉即可。在<code>source</code>文件夹中放置支付宝跟微信收款码并修改文件名字即可。<code>reward_comment</code>自带为打赏按钮上方的文字，不需要的话可以在前面加#注释掉。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543499587192.png" alt="1543499587192"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543499663537.png" alt="1543499663537"></p><p><span id="修改打赏字体不闪动"></span></p><h5 id="修改打赏字体不闪动"><a href="#修改打赏字体不闪动" class="headerlink" title="修改打赏字体不闪动"></a>修改打赏字体不闪动</h5><p>鼠标一指就疯狂抖动。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/doudong.gif" alt="doudong"></p><p>修改文件<code>next/source/css/_common/components/post/post-reward.styl</code>，然后注释其中的函数<code>#QR &gt; div:hover p</code>函数即可。css文件注释用/<em>   和  </em>/ 包裹代码即可。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181128211016.png" alt="blog20181128211016"></p><p>这个<code>post-reward.styl</code>文件是跟按钮及图片相关的，如果需要修改关于打赏的其他属性，例如按钮大小，样式，图片大小等，都可以修改<code>post-reward.styl</code>文件实现。我也不太懂。在这就不展开讲了。有兴趣的可以网上搜css的语法自己尝试改。<br><span id="开启友情链接or侧边栏推荐阅读"></span></p><h4 id="开启友情链接-or-侧边栏推荐阅读"><a href="#开启友情链接-or-侧边栏推荐阅读" class="headerlink" title="开启友情链接 or 侧边栏推荐阅读"></a>开启友情链接 or 侧边栏推荐阅读</h4><p><a style="color:#9900ff"><strong>主题配置文件</strong></a> 中搜索<code>links_title</code>字段，修改<code>links_icon</code>、<code>links_title</code>、<code>links_layout</code>、<code>links</code>四个字段的内容实现自定义风格。<br><code>link_icon</code>是title前面的图标，用法跟之前的社交链接的图标用法是一样的， 用Font Awesome图标。<br><code>links_title</code>为标题，如果是作为友情链接使用，可以设置为<br><code>links_title: 友情链接</code><br>在<code>links</code>字段设置友情链接名字及链接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">links:</span><br><span class="line">  友链1: http://example.com/</span><br><span class="line">  友链2: http://example.com/</span><br></pre></td></tr></table></figure></p><p>例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">links:</span><br><span class="line">  谷歌: https://google.com/</span><br><span class="line">  百度: http://baidu.com/</span><br></pre></td></tr></table></figure></p><p><code>links_layout</code>为各个友情链接的布局，默认是block，也可以用<code>#</code>注释掉这一行用下一行的<code>inline</code>布局。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543500026413.png" alt="1543500026413"></p><p>这个模块的自由度比较高，可以用来放置友情链接，也可以放置推荐阅读。<br><span id="设置RSS"></span></p><h4 id="设置-RSS"><a href="#设置-RSS" class="headerlink" title="设置 RSS"></a>设置 RSS</h4><p>NexT 中 RSS 有三个设置选项，满足特定的使用场景。 更改<a style="color:#9900ff"><strong>主题配置文件</strong></a>，设定 <code>rss</code> 字段的值：<br><code>false</code>：禁用 RSS，不在页面上显示 RSS 连接。<br>留空：默认就是留空的，使用 Hexo 生成的 Feed 链接。 你可以需要先安装 <a href="https://github.com/hexojs/hexo-generator-feed" rel="noopener" title="hexo-generator-feed" target="_blank">hexo-generator-feed</a>  插件。<br>安装方法：根目录下命令行输入<code>npm install hexo-generator-feed --save</code><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181128213214.png" alt="blog20181128213214"></p><p>具体的链接地址：适用于已经烧制过<code>Feed</code>的情形。<br>建议直接使用插件，比较省事。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543500185784.png" alt="1543500185784"> </p><p><span id="设置网站图标"></span></p><h4 id="设置网站图标"><a href="#设置网站图标" class="headerlink" title="设置网站图标"></a>设置网站图标</h4><p>在<a href="http://www.easyicon.net" rel="noopener" title="EasyIcon" target="_blank">EasyIcon</a>中分别找一张（16 <em> 16与32 </em> 32）的<code>ico</code>图标,或者去别的网站下载或者制作，并将图标名称改为<code>favicon16.ico</code>与<code>favicon32.ico</code>，然后把图标放在<code>/themes/next/source/images</code>或者放在根目录的<code>/source/images</code>文件夹里。<br>在<a style="color:#9900ff"><strong>主题配置文件</strong></a>内搜索<code>favicon</code>字段，把 <code>small</code>、<code>medium</code>字段的地址修改为<code>/images/favicon16.ico</code> 与 <code>/images/favicon32.ico</code><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543500338504.png" alt="1543500338504"></p><p><span id="实现全站及文章字数统计及阅读时长"></span></p><h4 id="实现全站及文章字数统计及阅读时长"><a href="#实现全站及文章字数统计及阅读时长" class="headerlink" title="实现全站及文章字数统计及阅读时长"></a>实现全站及文章字数统计及阅读时长</h4><p>根目录命令运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure></p><p><a style="color:#ff0033"><strong>博客配置文件</strong></a>底部添加如下内容，保存。<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line"><span class="attr">  symbols:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  time:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_symbols:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_time:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543500434372.png" alt="1543500434372"></p><p>重新<code>hexo s</code>看一下，文章页面已经有字数跟阅读时长的统计了。网站底部也显示了网站总字数跟总阅读时长。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543500395667.png" alt="1543500395667"></p><p><span id="添加顶部加载条"></span></p><h4 id="添加顶部加载条"><a href="#添加顶部加载条" class="headerlink" title="添加顶部加载条"></a>添加顶部加载条</h4><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/jiazaitiao.gif" alt="jiazaitiao"></p><p>最新版本的Next主题是内置了加载条功能的。<br>根目录打开命令行，输入如下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-pace themes/next/source/lib/pace</span><br></pre></td></tr></table></figure></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129162054.png" alt="blog20181129162054"></p><p>然后<a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>pace</code>字段，修改<code>pace: false</code>为<code>pace: true</code>即可开启加载条功能，修改下方的<code>pace-theme</code>字段还可以修改加载条的样式。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543500576120.png" alt="1543500576120"></p><p><span id="自定义鼠标样式"></span></p><h4 id="自定义鼠标样式"><a href="#自定义鼠标样式" class="headerlink" title="自定义鼠标样式"></a>自定义鼠标样式</h4><p>打开<code>themes/next/source/css/_custom/custom.styl</code>,在里面写下如下代码<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 鼠标样式</span><br><span class="line">  * &#123;</span><br><span class="line">      <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">"http://om8u46rmb.bkt.clouddn.com/sword2.ico"</span>),auto<span class="meta">!important</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">      <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">"http://om8u46rmb.bkt.clouddn.com/sword1.ico"</span>),auto<span class="meta">!important</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>在<a href="http://www.easyicon.net" rel="noopener" title="EasyIcon" target="_blank">EasyIcon</a>中找一张16 * 16的<code>ico</code>图，放在<code>/source/images/</code>中，修改上述代码中的链接为<code>/images/xxx.ico</code>，如果不放在本地的话，可以把图片放在图床，直接替换链接即可。<br>第一行的链接是默认状态下的鼠标样式，第二行的是鼠标按下时的样式。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/mouseico.gif" alt="mouseico"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543500770005.png" alt="1543500770005"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543500900414.png" alt="1543500900414"></p><p><span id="实现点击出现桃心"></span></p><h4 id="实现点击出现桃心-以及-爆炸效果"><a href="#实现点击出现桃心-以及-爆炸效果" class="headerlink" title="实现点击出现桃心 以及 爆炸效果"></a>实现点击出现桃心 以及 爆炸效果</h4><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/love.gif" alt="love"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/bom.gif" alt="bom"></p><p>1.在<code>/themes/next/source/js/src</code>下新建文件<code>love.js</code>并填入如下代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">"function"</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"div"</span>);a.className=<span class="string">"heart"</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX<span class="number">-5</span>,<span class="attr">y</span>:e.clientY<span class="number">-5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"style"</span>);a.type=<span class="string">"text/css"</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">"rgb("</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">")"</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;setTimeout(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure></p><p>建一个叫<code>fireworks.js</code>的文件并写入如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;use strict&quot;;function updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;function createParticule(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;function createCircle(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=&quot;#F00&quot;,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;function renderParticule(e)&#123;for(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;function animateParticules(e,t)&#123;for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:function(e)&#123;return e.endPos.x&#125;,y:function(e)&#123;return e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:&quot;linear&quot;,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule,offset:0&#125;)&#125;function debounce(e,t)&#123;var a;return function()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(function()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(&quot;.fireworks&quot;);if(canvasEl)&#123;var ctx=canvasEl.getContext(&quot;2d&quot;),numberOfParticules=30,pointerX=0,pointerY=0,tap=&quot;mousedown&quot;,colors=[&quot;#FF1461&quot;,&quot;#18FF92&quot;,&quot;#5A87FF&quot;,&quot;#FBF38C&quot;],setCanvasSize=debounce(function()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+&quot;px&quot;,canvasEl.style.height=window.innerHeight+&quot;px&quot;,canvasEl.getContext(&quot;2d&quot;).scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:function()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,function(e)&#123;&quot;sidebar&quot;!==e.target.id&amp;&amp;&quot;toggle-sidebar&quot;!==e.target.id&amp;&amp;&quot;A&quot;!==e.target.nodeName&amp;&amp;&quot;IMG&quot;!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(&quot;resize&quot;,setCanvasSize,!1)&#125;&quot;use strict&quot;;function updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;function createParticule(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;function createCircle(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=&quot;#F00&quot;,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;function renderParticule(e)&#123;for(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;function animateParticules(e,t)&#123;for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:function(e)&#123;return e.endPos.x&#125;,y:function(e)&#123;return e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:&quot;linear&quot;,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule,offset:0&#125;)&#125;function debounce(e,t)&#123;var a;return function()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(function()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(&quot;.fireworks&quot;);if(canvasEl)&#123;var ctx=canvasEl.getContext(&quot;2d&quot;),numberOfParticules=30,pointerX=0,pointerY=0,tap=&quot;mousedown&quot;,colors=[&quot;#FF1461&quot;,&quot;#18FF92&quot;,&quot;#5A87FF&quot;,&quot;#FBF38C&quot;],setCanvasSize=debounce(function()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+&quot;px&quot;,canvasEl.style.height=window.innerHeight+&quot;px&quot;,canvasEl.getContext(&quot;2d&quot;).scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:function()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,function(e)&#123;&quot;sidebar&quot;!==e.target.id&amp;&amp;&quot;toggle-sidebar&quot;!==e.target.id&amp;&amp;&quot;A&quot;!==e.target.nodeName&amp;&amp;&quot;IMG&quot;!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(&quot;resize&quot;,setCanvasSize,!1)&#125;;</span><br></pre></td></tr></table></figure></p><p>然后打开<code>themes/next/layout/_layout.swig</code>,在<code>&lt;/body&gt;</code>上面写下如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.fireworks &amp;&amp; not theme.love %&#125;</span><br><span class="line"> &lt;canvas class=&quot;fireworks&quot; style=&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;/canvas&gt; </span><br><span class="line"> &lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;&gt;&lt;/script&gt; </span><br><span class="line"> &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/fireworks.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% if theme.love &amp;&amp; not theme.fireworks %&#125;</span><br><span class="line">  &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129205023.png" alt="blog20181129205023"></p><p>最后在<a style="color:#9900ff"><strong>主题配置文件</strong></a>最下方加入如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Fireworks and love</span><br><span class="line">fireworks: true</span><br><span class="line">love: false</span><br></pre></td></tr></table></figure></p><p><code>fireworks</code>是爆炸效果，<code>love</code>是心形效果。两个不能同时开。</p><p><span id="修改网页底部的小图标"></span></p><h4 id="修改网页底部的小图标"><a href="#修改网页底部的小图标" class="headerlink" title="修改网页底部的小图标"></a>修改网页底部的小图标</h4><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129170824.png" alt="blog20181129170824"></p><p><a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>footer</code>字段，修改下方的<code>icon</code>字段下的<code>name</code>字段。<code>name</code>字段后的名字是 Font Awesome 图标的名字（不必带 <code>fa-</code> 前缀）。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129171638.png" alt="blog20181129171638"></p><p><code>animated</code>自动为闪动开关，设置为<code>true</code>后图标会闪动。<br>以及可以设置图标颜色，<code>color</code>处填入16进制颜色代码即可。注意保留原来的双引号。<br><span id="去掉页面底部的强力驱动信息及设置备案信息"></span></p><h4 id="去掉页面底部的强力驱动信息及设置备案信息"><a href="#去掉页面底部的强力驱动信息及设置备案信息" class="headerlink" title="去掉页面底部的强力驱动信息及设置备案信息"></a>去掉页面底部的强力驱动信息及设置备案信息</h4><p><a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>copyright</code>字段，修改<code>powered</code>下的<code>enable</code>字段的<code>true</code>为<code>false</code>即可去掉强力驱动部分的内容。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129172048.png" alt="blog20181129172048"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129172144.png" alt="blog20181129172144"></p><p>同样的<code>theme</code>下的<code>enable</code>设置为<code>false</code>的话可以去掉页面底部的主题信息。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129172232.png" alt="blog20181129172232"></p><p><code>enable</code>设置为<code>true</code>，<code>version</code>设置为<code>false</code>的话，则不显示版本号。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129172311.png" alt="blog20181129172311"></p><p>如果博客有备案的话，下方<code>beian</code>字段设置为<code>true</code>，<code>icp</code>后填写备案号。<br><span id="添加动态背景"></span></p><h4 id="添加动态背景"><a href="#添加动态背景" class="headerlink" title="添加动态背景"></a>添加动态背景</h4><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/activebackground.gif" alt="activebackground"></p><p>根目录打开命令行，输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-canvas-nest themes/next/source/lib/canvas-nest</span><br></pre></td></tr></table></figure></p><p><a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>canvas-nest</code>字段，<code>enable</code>项设置为<code>true</code>。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129173536.png" alt="blog20181129173536"></p><p>其他配置项说明：</p><ul><li><code>color</code> ：线条颜色, 默认: <code>&#39;0,0,0&#39;</code>；三个数字分别为(R,G,B)</li><li><code>opacity</code>: 线条透明度（0~1）, 默认: <code>0.5</code></li><li><code>count</code>: 线条的总数量, 默认: <code>150</code></li><li><code>zIndex:</code> 背景的z-index属性，css属性用于控制所在层的位置, 默认: <code>-1</code></li><li><code>onmobile</code>：是否在手机端显示。<br><span id="增加波浪背景动画"></span></li></ul><h4 id="增加波浪背景动画"><a href="#增加波浪背景动画" class="headerlink" title="增加波浪背景动画"></a>增加波浪背景动画</h4><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/3d.gif" alt="3d"></p><p>根目录打开命令行，输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-three themes/next/source/lib/three</span><br></pre></td></tr></table></figure></p><p><a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>three_waves</code>字段，设置为<code>true</code><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129183551.png" alt="blog20181129183551"></p><p><code>three_waves</code>、<code>canvas_lines</code>、<code>canvas_sphere</code>三个的效果各不相同，可以自己尝试一下选一个喜欢的。<br><span id="forkme"></span></p><h4 id="在右上角实现fork-me-on-github按钮"><a href="#在右上角实现fork-me-on-github按钮" class="headerlink" title="在右上角实现fork me on github按钮"></a>在右上角实现fork me on github按钮</h4><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129193000.png" alt="blog20181129193000"><br>最新的Next主题已经内置了增加右上角的<code>Fork me on github</code>按钮功能，只需要在<a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>github_banner</code>字段，去掉前面的#，把<code>||</code>前面的github链接替换成自己的即可。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129192947.png" alt="blog20181129192947"></p><p><code>||</code>后的参数为按钮的title，为鼠标指在按钮上时显示的文本。<br><span id="增加回到顶部按钮及显示当前浏览进度"></span></p><h4 id="增加回到顶部按钮及显示当前浏览进度"><a href="#增加回到顶部按钮及显示当前浏览进度" class="headerlink" title="增加回到顶部按钮及显示当前浏览进度"></a>增加回到顶部按钮及显示当前浏览进度</h4><p><a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>b2t</code>字段，将<code>b2t</code>字段的<code>false</code>修改为<code>true</code>即可，（注意此功能只能用于Pisces和Gemini主题）。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129193327.png" alt="blog20181129193327"></p><p>将下方的<code>scrollpercent</code>字段设置为<code>true</code>即可实现当前浏览进度的显示。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129193749.png" alt="blog20181129193749"></p><p><span id="修改顶部菜单与下方信息栏的间隙大小"></span></p><h4 id="修改顶部菜单与下方信息栏的间隙大小"><a href="#修改顶部菜单与下方信息栏的间隙大小" class="headerlink" title="修改顶部菜单与下方信息栏的间隙大小"></a>修改顶部菜单与下方信息栏的间隙大小</h4><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543501516957.png" alt="1543501516957"></p><p><a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>offset</code>字段，将<code>offset</code>的像素数大小设置为需要的值，默认为12。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129194053.png" alt="blog20181129194053"></p><p><span id="网站标题栏背景颜色"></span></p><h4 id="网站标题栏背景颜色"><a href="#网站标题栏背景颜色" class="headerlink" title="网站标题栏背景颜色"></a>网站标题栏背景颜色</h4><p>打开 <code>themes/next/source/css/_custom/custom.styl</code> ,在里面写下如下代码：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 网站标题栏背景颜色</span><br><span class="line"><span class="selector-class">.site-meta</span> &#123;</span><br><span class="line">  background: #FF0033; //修改为自己喜欢的颜色</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>颜色的值可以自行网上搜索16进制颜色进行修改。<br><span id="为博客加上萌萌的"></span></p><h4 id="为博客加上萌萌的"><a href="#为博客加上萌萌的" class="headerlink" title="为博客加上萌萌的"></a>为博客加上萌萌的</h4><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/chongwu.gif" alt="chongwu"></p><p>首先安装插件，根目录命令行输入<code>npm install --save hexo-helper-live2d</code><br><a style="color:#9900ff"><strong>主题配置文件</strong></a>最下方添加如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># Live2D</span><br><span class="line">## https://github.com/xiazeyu/live2d-widget.js</span><br><span class="line">## https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-init</span><br><span class="line">live2d:</span><br><span class="line">  model:</span><br><span class="line">    scale: 1</span><br><span class="line">    hHeadPos: 0.5</span><br><span class="line">    vHeadPos: 0.618</span><br><span class="line">  display:</span><br><span class="line">    superSample: 2</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">    position: right</span><br><span class="line">    hOffset: 0</span><br><span class="line">    vOffset: -20</span><br><span class="line">  mobile:</span><br><span class="line">    show: true</span><br><span class="line">    scale: 0.5</span><br><span class="line">  react:</span><br><span class="line">    opacityDefault: 0.7</span><br><span class="line">    opacityOnHover: 0.2</span><br></pre></td></tr></table></figure></p><p>更多设置可以查看<a href="https://github.com/EYHN/hexo-helper-live2d" rel="noopener" title="官方文档" target="_blank">官方文档</a><br><span id="添加DaoVoice实现在线联系"></span></p><h4 id="添加DaoVoice-实现在线联系"><a href="#添加DaoVoice-实现在线联系" class="headerlink" title="添加DaoVoice 实现在线联系"></a>添加DaoVoice 实现在线联系</h4><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/dovoice.gif" alt="dovoice"></p><p>本功能可以实现在线留言，作者会收到邮件，如果绑定了微信，作者还会收到微信通知。<br>首先到<a href="http://dashboard.daovoice.io/get-started?invite_code=e25c1e73" rel="noopener" title="DaoVoice" target="_blank">DaoVoice</a>注册一个Daovioce账号。<br>注册完成后会进到DaoCloud，重新访问连接即可。进到Daovoice面板，点击左侧边栏的<code>应用设置-- 安装到网站</code>。在下方的代码中会看到<code>app_id: &quot;xxxx&quot;</code>字样。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129200739.png" alt="blog20181129200739"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129200805.png" alt="blog20181129200805"></p><p>打开 <code>themes/next/layout/_partials/head/head.swig</code> 文件中最下方加入如下代码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.daovoice %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">  (<span class="function"><span class="keyword">function</span>(<span class="params">i,s,o,g,r,a,m</span>)</span>&#123;i[<span class="string">"DaoVoiceObject"</span>]=r;i[r]=i[r]||<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;(i[r].q=i[r].q||[]).push(<span class="built_in">arguments</span>)&#125;,i[r].l=<span class="number">1</span>*<span class="keyword">new</span> <span class="built_in">Date</span>();a=s.createElement(o),m=s.getElementsByTagName(o)[<span class="number">0</span>];a.async=<span class="number">1</span>;a.src=g;a.charset=<span class="string">"utf-8"</span>;m.parentNode.insertBefore(a,m)&#125;)(<span class="built_in">window</span>,<span class="built_in">document</span>,<span class="string">"script"</span>,(<span class="string">'https:'</span> == <span class="built_in">document</span>.location.protocol ? <span class="string">'https:'</span> : <span class="string">'http:'</span>) + <span class="string">"//widget.daovoice.io/widget/0f81ff2f.js"</span>,<span class="string">"daovoice"</span>)</span></span><br><span class="line"><span class="javascript">  daovoice(<span class="string">'init'</span>, &#123;</span></span><br><span class="line"><span class="javascript">      app_id: <span class="string">"&#123;&#123;theme.daovoice_app_id&#125;&#125;"</span></span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="javascript">  daovoice(<span class="string">'update'</span>);</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p><p>在<a style="color:#9900ff"><strong>主题配置文件</strong></a> <code>_config.yml</code>，添加如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># DaoVoice </span><br><span class="line">daovoice: true</span><br><span class="line">daovoice_app_id: 这里输入前面获取的app_id</span><br></pre></td></tr></table></figure></p><p>回到Daovoice控制面板，点击聊天设置可以对聊天图标的颜色及位置进行设置。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129201302.png" alt="blog20181129201302"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129202642.png" alt="blog20181129202642"></p><p>最后到右上角选择管理员，微信绑定，可以绑定你的微信号。这样收到消息后可以通过小程序进行回复。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129202629.png" alt="blog20181129202629"></p><p><span id="主页文章添加阴影效果"></span></p><h4 id="主页文章添加阴影效果"><a href="#主页文章添加阴影效果" class="headerlink" title="主页文章添加阴影效果"></a>主页文章添加阴影效果</h4><p>打开<code>\themes\next\source\css\_custom\custom.styl</code>,加入如下代码：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 主页文章添加阴影效果</span><br><span class="line"> <span class="selector-class">.post</span> &#123;</span><br><span class="line">   <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span><br><span class="line">   <span class="attribute">margin-bottom</span>: <span class="number">60px</span>;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">25px</span>;</span><br><span class="line">   <span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(202, 203, 203, .5);</span><br><span class="line">   <span class="attribute">-moz-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(202, 203, 204, .5);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>可以自行修改代码来修改阴影效果。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/blog20181129205545.png" alt="blog20181129205545"></p><p><span id="增加本地搜索功能"></span></p><h4 id="增加本地搜索功能"><a href="#增加本地搜索功能" class="headerlink" title="增加本地搜索功能"></a>增加本地搜索功能</h4><p>首先安装插件，根目录命令行输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543541556072.png" alt="1543541556072"></p><p>编辑<a style="color:#ff0033"><strong>博客配置文件</strong></a>，新增以下内容到任意位置：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="attr">  field:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">  format:</span> <span class="string">html</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543541568512.png" alt="1543541568512"></p><p><a style="color:#9900ff"><strong>主题配置文件</strong></a>搜索<code>local_search</code>字段，设置<code>enable</code>为<code>true</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-theme-diy/1543543765215.png" alt="1543543765215"></p><p>配置完成后保存，<code>hexo g</code>、<code>hexo s</code>查看。</p><h2 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h2>]]></content>
    
    <summary type="html">
    
      博客搭建以及几十种主题修改方法（基于Next主题）
    
    </summary>
    
      <category term="博客搭建" scheme="https://www.lixint.me/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://www.lixint.me/tags/Hexo/"/>
    
      <category term="Next主题" scheme="https://www.lixint.me/tags/Next%E4%B8%BB%E9%A2%98/"/>
    
      <category term="博客搭建" scheme="https://www.lixint.me/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>本地安装Hexo博客框架及发布至Github Pages</title>
    <link href="https://www.lixint.me/hexo-githubpages.html"/>
    <id>https://www.lixint.me/hexo-githubpages.html</id>
    <published>2018-11-22T12:23:35.000Z</published>
    <updated>2018-12-16T08:58:40.403Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月16日16:58</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><blockquote class="blockquote-center"><p>欢迎加入博客搭建交流群（QQ群号60429576）==&gt;<a style="color:#ff0033" href="http://qq.cn.hn/g6Y" title="QQ群号60429576" rel="noopener" target="_blank"><strong>点击加入</strong></a>&lt;==</p></blockquote><p>前面的文章中我们进行了<br><strong>1. </strong><a href="https://www.lixint.me/githubpage.html" title="Github注册以及Github Pages创建">Github注册以及Github Pages创建</a><br><strong>2. </strong> <a href="https://www.lixint.me/hexo-git.html" title="Hexo博客本地环境安装">Hexo博客本地环境安装</a><br>下一步，我们就要进行本地Hexo博客框架的搭建，完成一个能够在本地访问的博客页面。</p><h3 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h3><p><a href="https://hexo.io/zh-cn/" rel="noopener" title="Hexo中文官方网站" target="_blank">Hexo</a>是一个快速, 简洁且高效的博客框架. 让上百个页面在几秒内瞬间完成渲染. <code>Hexo</code>支持<code>Github Flavored Markdown</code>的所有功能, 甚至可以整合<code>Octopress</code>的大多数插件. 并自己也拥有强大的插件系统。</p><h3 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h3><p>本步骤需要Git与Node.js的支持，如果没有安装的话请参照<a href="https://www.lixint.me/hexo-git.html" title="Hexo博客本地环境安装">Hexo博客本地环境安装</a>进行安装。</p><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><p>电脑中任选盘符新建一个文件夹作为博客网站的根目录，文件名好不要是中文。<br>空白处右键点击<code>Git Bash here</code><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/blog20181122204735.png" alt="blog20181122204735"><br>在<img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/blog20181122205327.png" alt="blog20181122205327"><br>出现的命令行窗口中输入<code>npm install -g hexo-cli</code>，等待运行完成依次输入以下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;新建文件夹的名称&gt;</span><br><span class="line">cd &lt;新建文件夹的名称&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/1542892357260.png" alt="1542892357260"><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/1542892463508.png" alt="1542892463508">等待运行完成，此时文件夹中多了许多文件。<br><strong>注意</strong>：<strong>后续的命令均需要在<a style="color:#DC143C">站点目录</a>下（即文件夹内）使用Git Bash运行。</strong><br>此时Hexo框架的本地搭建已经完成了。我们来运行一下看看：<br>命令行依次输入以下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/1542892849938.png" alt="1542892849938"><br>浏览器中打开<a style="color:#fffff">http://locakhost:4000</a>或者<a style="color:#fffff">127.0.0.1:4000</a><br>可以看到一个网页，说明Hexo博客已经成功在本地运行。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/1542893053692.png" alt="1542893053692"></p><h3 id="本地博客发布到Github-Pages"><a href="#本地博客发布到Github-Pages" class="headerlink" title="本地博客发布到Github Pages"></a>本地博客发布到Github Pages</h3><p><strong>第一步</strong>，需要在Github上创建好Github Pages仓库。<a href="https://www.lixint.me/githubpage.html" title="Github注册以及Github Pages创建">Github注册以及Github Pages创建</a><br><strong>第二步</strong>，安装发布插件。<br>在<strong>站点目录</strong>中运行命令行输入<code>npm install hexo-deployer-git --save</code><br>后续博客的修改等等各种功能  都需要安装各种<strong>插件</strong>。这个对博客的帮助是非常大的。<br>等待插件安装完成。<br><strong>第三步</strong>，将本地目录与Github关联起来。<br>命令行输入<code>ssh-keygen -t rsa -C &quot;邮箱地址&quot;</code>，这里要输入之前注册Github时的邮箱，例如我之前注册用的是 <a style="color:#fffff">example@163.com</a>，那命令行就输入<code>ssh-keygen -t rsa -C &quot;example@163.com&quot;</code>输入后一直回车。<br>打开<code>C:\Users\用户名</code>，文件夹内寻找<code>.ssh</code>文件夹<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/1543324211395.png" alt="1543324211395"><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/1543324256289.png" alt="1543324256289"><br>文件夹内会有两个文件，一个<code>id_rsa.pub</code>一个<code>id_rsa</code>，用文本方式打开<code>id_rsa.pub</code>，推荐使用Notepad++，复制里面的的内容。<br>打开Github 点击右上角的头像 Settings  选择SSH and GPG keys<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/1543324878366.png" alt="1543324878366"><br>点击New SSH key  将之前复制的内容粘帖到Key的框中。  上面的title 可以随意  点击add  完成添加。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/1543324991690.png" alt="1543324991690"><br>此时回到命令行。 试一下是否跟Github连接成功。命令行输入<code>ssh -T git@github.com</code> ，弹出的内容输入<code>yes</code>，看到出现<code>Hi &lt;account name&gt;! You&#39;ve successfully authenticated, but GitHub doesnot provide shell access.</code> 说明链接成功。此处这个<code>&lt;account name&gt;</code>应该是你Github的用户名。<br><strong>第四步</strong> 修改Hexo站点的配置文件。<br>进入博客文件夹，找到<code>_config.yml</code>文件。 这个是<strong>博客配置文件</strong>，后面的修改会多次用到它。用<strong>Notepad++</strong>打开。<br>修改一下title跟url等，url修改为<code>https://&lt;用户名&gt;.github.io</code>，例如我的用户名是example的话，就应该输入<code>https://example.github.io</code><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/1543325561106.png" alt="1543325561106"><br>拉到文件最底部，在deploy下面添加一个repo项  一个branch项。填入如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type: git</span><br><span class="line">repo: git@github.com:&lt;Github用户名&gt;/&lt;github用户名&gt;.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure></p><p>图中也是以用户名为example为例。填写完成后保存即可。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-githubpages/1543325906143.png" alt="1543325906143"><br><strong>第五步</strong> 生成页面上传至Github<br>命令行输入<code>hexo g</code>，此时Hexo会根据配置文件渲染出一套静态页面。<br>完成后输入<code>hexo d</code>，此时会将之前渲染出的一系列文件上传至Github。<br><strong>Tips</strong>： 也可以直接输入<code>hexo g -d</code>直接完成渲染和上传。<br>上传完成后，打开<a style="color:#fffff"><em>https://&lt;用户名&gt;.github.io</em></a>查看上传的网页。如果页面变成了之前本地调试时的样子，说明上传以及完成了。没变的话查看一下上传时命令行窗口的信息有没有错误信息，没有的话清除一下浏览器缓存试试。</p>]]></content>
    
    <summary type="html">
    
      从零开始搭建博客第三部分，本地安装Hexo博客框架并发布至Github Pages
    
    </summary>
    
      <category term="博客搭建" scheme="https://www.lixint.me/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Github Pages" scheme="https://www.lixint.me/tags/Github-Pages/"/>
    
      <category term="Github" scheme="https://www.lixint.me/tags/Github/"/>
    
      <category term="Git" scheme="https://www.lixint.me/tags/Git/"/>
    
      <category term="博客搭建" scheme="https://www.lixint.me/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客本地环境安装步骤</title>
    <link href="https://www.lixint.me/hexo-git.html"/>
    <id>https://www.lixint.me/hexo-git.html</id>
    <published>2018-11-21T11:51:54.000Z</published>
    <updated>2018-12-16T08:57:36.986Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月16日16:57</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><blockquote class="blockquote-center"><p>欢迎加入博客搭建交流群（QQ群号60429576）==&gt;<a style="color:#ff0033" href="http://qq.cn.hn/g6Y" title="QQ群号60429576" rel="noopener" target="_blank"><strong>点击加入</strong></a>&lt;==</p></blockquote><p>本篇文章主要进行了Hexo博客搭建本地环境的配置及将博客发布至Github Pages。成功将Hexo博客在本地及GIthub Pages运行。</p><h3 id="本地环境安装"><a href="#本地环境安装" class="headerlink" title="本地环境安装"></a>本地环境安装</h3><h4 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h4><p>打开<a href="https://nodejs.org/zh-cn/download/" rel="noopener" title="Node.js下载页" target="_blank">Node.js下载页</a>选择Windows安装包，根据系统选择32位或者64位进行下载。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/1542803398643.png" alt="1542803398643"></p><p>下载完成后打开进行安装。<br>步骤1：勾选<code>I accept</code>，Next<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/blog20181121183846.png" alt="blog20181121183846"></p><p>步骤2：设置安装路径，默认即可<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/blog20181121183854.png" alt="blog20181121183854"></p><p>步骤3：选择需要安装的包，默认即可<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/blog20181121183920.png" alt="blog20181121183920"></p><p>步骤4：默认即可<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/blog20181121183925.png" alt="blog20181121183925"></p><p>步骤5：Next<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/blog20181121183843.png" alt="blog20181121183843"></p><p>步骤6：点击<code>Finish</code>完成安装。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/install-node-msi-version-on-windows-step8.png" alt="install-node-msi-version-on-windows-step8"></p><p>步骤7：检查一下Node.js版本<br>开始 - 运行 - 输入cmd ，输入<code>node --version</code>，可以看到Node.js的版本。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/1542806958800.png" alt="1542806958800"></p><h4 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h4><p>Git安装跟Node.js一样简单，打开<a href="https://git-scm.com/" rel="noopener" title="Git下载页" target="_blank">Git下载页</a>，点击右侧的下载按钮。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/1542807143006.png" alt="1542807143006"></p><p>下载完成后，打开安装，这个步骤比较多，一路Next即可，无需过多配置。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/blog20181121184504.png" alt="blog20181121184504"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/blog20181121184507.png" alt="blog20181121184507"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/blog20181121184510.png" alt="blog20181121184510"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/blog20181121184514.png" alt="blog20181121184514"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/blog20181121184518.png" alt="blog20181121184518"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/blog20181121184521.png" alt="blog20181121184521"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/blog20181121184549.png" alt="blog20181121184549"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/blog20181121184551.png" alt="blog20181121184551"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/blog20181121184554.png" alt="blog20181121184554"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/blog20181121184558.png" alt="blog20181121184558"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/blog20181121184601.png" alt="blog20181121184601"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/blog20181121184607.png" alt="blog20181121184607"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/blog20181121184640.png" alt="blog20181121184640"></p><p>点击Finish完成安装。<br>此时在桌面空白处点击右键，你就会发现右键菜单多了两个命令  <code>Git GUI here</code>和<code>Git bash here</code><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/hexo-git/blog20181121184711.png" alt="blog20181121184711"></p><p>至此，Node.js和Git全部安装完成。<br>后面我们要进行Hexo博客框架的安装以及将博客发布到Github Pages。</p>]]></content>
    
    <summary type="html">
    
      从零开始搭建博客第二部分，本地Node.js、Git安装
    
    </summary>
    
      <category term="博客搭建" scheme="https://www.lixint.me/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://www.lixint.me/tags/Hexo/"/>
    
      <category term="Github" scheme="https://www.lixint.me/tags/Github/"/>
    
      <category term="Git" scheme="https://www.lixint.me/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>【持续更新】Github Pages + Hexo 博客搭建，Next主题个性化修改</title>
    <link href="https://www.lixint.me/hexo-blog.html"/>
    <id>https://www.lixint.me/hexo-blog.html</id>
    <published>2018-11-21T09:37:10.000Z</published>
    <updated>2018-12-22T13:03:22.715Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月22日21:03</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"><br><blockquote class="blockquote-center"><p>欢迎加入博客搭建交流群（QQ群号60429576）==&gt;<a style="color:#ff0033" href="http://qq.cn.hn/g6Y" title="QQ群号60429576" rel="noopener" target="_blank"><strong>点击加入</strong></a>&lt;==</p></blockquote></p><h3 id="站内博客搭建文章汇总"><a href="#站内博客搭建文章汇总" class="headerlink" title="站内博客搭建文章汇总"></a>站内博客搭建文章汇总</h3><p><a href="https://www.lixint.me/githubpage.html">1.Github注册以及Github Pages</a><br><a href="https://www.lixint.me/hexo-git.html">2.Hexo博客本地环境安装步骤</a><br><a href="https://www.lixint.me/hexo-githubpages.html">3.本地安装Hexo博客框架及发布至Github Pages</a><br><a href="https://www.lixint.me/hexo-theme-diy.html">4.Hexo博客主题安装及Next主题个性化修改</a><br><a href="https://www.lixint.me/article.html">5.新建文章并发布</a><br><a href="https://www.lixint.me/errortype.html">6.Hexo博客常见错误分析</a><br><a href="https://www.lixint.me/hexovps.html">7.Hexo博客部署至云服务器</a><br><a href="https://www.lixint.me/next2.html">8.Next主题修改第二弹</a><br><a href="https://www.lixint.me/markdown.html">9.Markdown基本语法教程</a></p><h3 id="从零开始搭建博客步骤"><a href="#从零开始搭建博客步骤" class="headerlink" title="从零开始搭建博客步骤"></a>从零开始搭建博客步骤</h3><h4 id="第一步-申请Github以及创建Github-Pages"><a href="#第一步-申请Github以及创建Github-Pages" class="headerlink" title="第一步 申请Github以及创建Github Pages"></a>第一步 申请Github以及创建Github Pages</h4><p>参照文章==&gt;<a href="https://www.lixint.me/githubpage.html">Github注册以及Github Pages</a></p><h4 id="第二步-本地环境安装"><a href="#第二步-本地环境安装" class="headerlink" title="第二步 本地环境安装"></a>第二步 本地环境安装</h4><p>参照文章==&gt;<a href="https://www.lixint.me/hexo-git.html">Hexo博客本地环境安装步骤</a></p><h4 id="第三步-本地安装进行博客搭建并上传只Gihub-Pages"><a href="#第三步-本地安装进行博客搭建并上传只Gihub-Pages" class="headerlink" title="第三步 本地安装进行博客搭建并上传只Gihub Pages"></a>第三步 本地安装进行博客搭建并上传只Gihub Pages</h4><p>参照文章==&gt; <a href="https://www.lixint.me/hexo-githubpages.html">本地安装Hexo博客框架及发布至Github Pages</a></p><p>至此，一个博客就已经搭建好了，后续要进行的时候对博客进行修改，让博客更加美观易用以及博文发布等操作。</p><h4 id="第四步-进阶教程，博客主题应用及个性化修改"><a href="#第四步-进阶教程，博客主题应用及个性化修改" class="headerlink" title="第四步 进阶教程，博客主题应用及个性化修改"></a>第四步 进阶教程，博客主题应用及个性化修改</h4><p>目前已经汇总了超过30项修改方法。</p><p>参照文章1==&gt;<a href="https://www.lixint.me/hexo-theme-diy.html">Hexo博客主题安装及Next主题个性化修改</a></p><p>参照文章2==&gt;<a href="https://www.lixint.me/next2.html">Next主题修改第二弹</a></p><h4 id="第五步-开始发布新文章"><a href="#第五步-开始发布新文章" class="headerlink" title="第五步 开始发布新文章"></a>第五步 开始发布新文章</h4><p>参照文章==&gt;<a href="https://www.lixint.me/article.html">新建文章并发布</a></p><p>文章编写==&gt;<a href="https://www.lixint.me/markdown.html">Markdown基本语法教程</a></p><h4 id="第六步-Github速度慢？部署到云服务器试试"><a href="#第六步-Github速度慢？部署到云服务器试试" class="headerlink" title="第六步 Github速度慢？部署到云服务器试试"></a>第六步 Github速度慢？部署到云服务器试试</h4><p>Github在国内访问速度有时候会比较慢，Coding又时不时挂掉。这时将博客部署到一个云服务器上就会是一个很好的选择。</p><p>参照文章==&gt; <a href="https://www.lixint.me/hexovps.html">Hexo博客部署至云服务器</a></p><h3 id="遇到问题？"><a href="#遇到问题？" class="headerlink" title="遇到问题？"></a>遇到问题？</h3><p>目前Hexo搭建博客已经非常成熟了，应用也极其广泛，常见的错误都可以通过百度/Google搜索解决。</p><p>这里汇总了部分常见的错误类型以供查看==&gt;<a href="https://www.lixint.me/errortype.html">Hexo博客常见错误分析</a></p><p>后续内容正在整理中。</p>]]></content>
    
    <summary type="html">
    
      从零开始搭建博客，总结自己搭建博客时候的流程以及踩过的一些坑。
    
    </summary>
    
      <category term="博客搭建" scheme="https://www.lixint.me/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://www.lixint.me/tags/Hexo/"/>
    
      <category term="Next主题" scheme="https://www.lixint.me/tags/Next%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Github注册以及Github Pages创建</title>
    <link href="https://www.lixint.me/githubpage.html"/>
    <id>https://www.lixint.me/githubpage.html</id>
    <published>2018-11-21T04:05:10.000Z</published>
    <updated>2018-12-16T08:53:58.661Z</updated>
    
    <content type="html"><![CDATA[<p><hr style="margin: 10px 0"><em>本文最后更新于<b style="color:#ff0033">2018年12月16日16:53</b>可能会因为没有更新而失效，如已失效或需要修正，请留言！</em><hr style="margin: 10px 0"></p><blockquote class="blockquote-center"><p>欢迎加入博客搭建交流群（QQ群号60429576）==&gt;<a style="color:#ff0033" href="http://qq.cn.hn/g6Y" title="QQ群号60429576" rel="noopener" target="_blank"><strong>点击加入</strong></a>&lt;==</p></blockquote><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><h4 id="注册Github，建立Gihub-Pages仓库"><a href="#注册Github，建立Gihub-Pages仓库" class="headerlink" title="注册Github，建立Gihub Pages仓库"></a>注册Github，建立Gihub Pages仓库</h4><p>打开<a href="http://github.com" rel="noopener" title="Github首页" target="_blank">Github首页</a>，点击右上角的<strong>Sign up</strong>或者直接在2处填写信息后点击<code>Sign up for Github</code>进行注册。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/githubpage/1542779914101-1542779914232.png" alt="1542779914101"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/githubpage/1542780176909-1542780177376.png" alt="1542780176909"></p><p>Verify account处点击两侧的箭头让图上的动物变成正的，验证完成后点击下方的<code>Creat an account</code>进到下一步。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/githubpage/1542780307073-1542780307139.png" alt="1542780307073"></p><p>选择<code>Free</code>方案，下方的两个选项可选可不选，点击<code>Continue</code>继续<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/githubpage/1542780585618.png" alt="1542780585618"></p><p>然后选择<code>Skip this step</code>完成Github的注册。此时Github会给你注册时填写的邮箱发送一封验证邮件，完成邮箱验证后才可以创建仓库。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/githubpage/1542780713264-1542780713495.png" alt="1542780713264"></p><p><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/githubpage/1542780938381-1542780938491.png" alt="1542780938381"></p><p>完成验证后，依次点击1，2处，在新页面点击<code>NEW</code>按钮。或者直接点击3处进行仓库创建。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/githubpage/1542781101767-1542781101882.png" alt="1542781101767"></p><p>填入必要的信息，这里的仓库名必须要填<code>&lt;用户名&gt;.github.io</code>例如，图示我注册的账户名为<code>creataccount2</code>，仓库名就需要填写<code>creataccount2.github.io</code>。<br>填写必要的描述，也可不填。勾选<code>Initialize this repository with a README</code>点击<code>Creat repository</code>进行创建。<br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/githubpage/1542781520728-1542781520914.png" alt="1542781520728"></p><p>依次点击1，2新建一个文件。<img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/githubpage/1542781616730-1542781617191.png" alt="1542781616730"></p><p>文件名为<code>index.html</code>，内容随意。点击<code>Commit new file</code>进行创建。<br>打开<code>&lt;用户名&gt;.github.io</code><br><img src="https://myself-1252916396.cos.ap-shanghai.myqcloud.com/githubpage/1542781764847-1542781764971.png" alt="1542781764847"></p><p>一个简单的网页，内容就是刚才我们输入的内容。<br>至此，Github Pages已经创建完成了。后续我们将利用Hexo博客框架对Github Pages的内容进行进一步的丰富。</p>]]></content>
    
    <summary type="html">
    
      从零开始搭建博客第一部分，Github注册及Github Pages建立
    
    </summary>
    
      <category term="博客搭建" scheme="https://www.lixint.me/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Github Pages" scheme="https://www.lixint.me/tags/Github-Pages/"/>
    
      <category term="Github" scheme="https://www.lixint.me/tags/Github/"/>
    
  </entry>
  
</feed>
