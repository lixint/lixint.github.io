<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[本地安装Hexo博客框架]]></title>
    <url>%2Fhexo-githubpages.html</url>
    <content type="text"><![CDATA[前面的文章中我们进行了 1. Github注册以及Github Pages创建 2. Hexo博客本地环境安装 下一步，我们就要进行本地Hexo博客框架的搭建，完成一个能够在本地访问的博客页面。 Hexo简介Hexo是一个快速, 简洁且高效的博客框架. 让上百个页面在几秒内瞬间完成渲染. Hexo支持Github Flavored Markdown的所有功能, 甚至可以整合Octopress的大多数插件. 并自己也拥有强大的插件系统。 1. Hexo安装本步骤需要Git与Node.js的支持，如果没有安装的话请参照Hexo博客本地环境安装进行安装。 1.1 初始化电脑中任选盘符新建一个文件夹作为博客网站的根目录，文件名好不要是中文。 空白处右键点击Git Bash here 在 出现的命令行窗口中输入npm install -g hexo-cli，等待运行完成依次输入以下命令 123hexo init &lt;新建文件夹的名称&gt;cd &lt;新建文件夹的名称&gt;npm install 等待运行完成，此时文件夹中多了许多文件。 注意：后续的命令均需要在站点目录下（即文件夹内）使用Git Bash运行。 此时Hexo框架的本地搭建已经完成了。我们来运行一下看看： 命令行依次输入以下命令 12hexo ghexo s 浏览器中打开http://locakhost:4000或者127.0.0.1:4000 可以看到一个网页，说明Hexo博客已经成功在本地运行。 2. 本地博客发布到Github Pages第一步，需要在Github上创建好Github Pages仓库。Github注册以及Github Pages创建 第二步，安装发布插件。 在站点目录中运行命令行输入npm install hexo-deployer-git --save 后续博客的修改等等各种功能 都需要安装各种插件。这个对博客的帮助是非常大的。 等待插件安装完成。 第三步，将本地目录与Github关联起来。 命令行输入ssh-keygen -t rsa -C &quot;邮箱地址&quot;，这里要输入之前注册Github时的邮箱，例如我之前注册用的是*example@163.com*，那命令行就输入ssh-keygen -t rsa -C “example@163.com“`输入后一直回车。 打开C:\Users\用户名，文件夹内寻找.ssh文件夹 文件夹内会有两个文件，一个id_rsa.pub一个id_rsa，用文本方式打开id_rsa.pub，推荐使用Notepad++，复制里面的的内容。 打开Github 点击右上角的头像 Settings 选择SSH and GPG keys 点击New SSH key 将之前复制的内容粘帖到Key的框中。 上面的title 可以随意 点击add 完成添加。 此时回到命令行。 试一下是否跟Github连接成功。命令行输入ssh -T git@github.com ，弹出的内容输入yes，看到出现Hi &lt;account name&gt;! You&#39;ve successfully authenticated, but GitHub doesnot provide shell access. 说明链接成功。此处这个&lt;account name&gt;应该是你Github的用户名。 第四步 修改Hexo站点的配置文件。 进入博客文件夹，找到_config.yml文件。 这个是博客配置文件，后面的修改会多次用到它。用Notepad++打开。 修改一下title跟url等，url修改为https://&lt;用户名&gt;.github.io，例如我的用户名是example的话，就应该输入https://example.github.io 拉到文件最底部，在deploy下面添加一个repo项 一个branch项。填入如下代码： 123type: gitrepo: git@github.com:&lt;Github用户名&gt;/&lt;github用户名&gt;.github.io.gitbranch: master 图中也是以用户名为example为例。填写完成后保存即可。 第五步 生成页面上传至Github 命令行输入hexo g，此时Hexo会根据配置文件渲染出一套静态页面。 完成后输入hexo d，此时会将之前渲染出的一系列文件上传至Github。 Tips： 也可以直接输入hexo g -d直接完成渲染和上传。 上传完成后，打开https://&lt;用户名&gt;.github.io查看上传的网页。如果页面变成了之前本地调试时的样子，说明上传以及完成了。没变的话查看一下上传时命令行窗口的信息有没有错误信息，没有的话清除一下浏览器缓存试试。]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>Git</tag>
        <tag>Github Pages</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客本地环境安装步骤]]></title>
    <url>%2Fhexo-git.html</url>
    <content type="text"><![CDATA[本篇文章主要进行了Hexo博客搭建本地环境的配置及将博客发布至Github Pages。成功将Hexo博客在本地及GIthub Pages运行。 1. 本地环境安装1.1 安装Node.js打开Node.js下载页选择Windows安装包，根据系统选择32位或者64位进行下载。 下载完成后打开进行安装。 步骤1：勾选I accept，Next 步骤2：设置安装路径，默认即可 步骤3：选择需要安装的包，默认即可步骤4：默认即可步骤5：Next步骤6：点击Finish完成安装。 步骤7：检查一下Node.js版本 开始 - 运行 - 输入cmd ，输入node --version，可以看到Node.js的版本。 1.2 安装GitGit安装跟Node.js一样简单，打开Git下载页，点击右侧的下载按钮。 下载完成后，打开安装，这个步骤比较多，一路Next即可，无需过多配置。 点击Finish完成安装。 此时在桌面空白处点击右键，你就会发现右键菜单多了两个命令 Git GUI here和Git bash here 至此，Node.js和Git全部安装完成。 后面我们要进行Hexo博客框架的安装以及将博客发布到Github Pages。]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Github</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Github Pages + Hexo 博客搭建，Next主题个性化修改]]></title>
    <url>%2Fhexo-blog.html</url>
    <content type="text"><![CDATA[敬请期待]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NEXT主题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Github注册以及Github Pages创建]]></title>
    <url>%2Fgithubpage.html</url>
    <content type="text"><![CDATA[一、准备工作1.注册Github，建立Gihub Pages仓库打开Github首页，点击右上角的Sign up或者直接在2处填写信息后点击Sign up for Github进行注册。 Verify account处点击两侧的箭头让图上的动物变成正的，验证完成后点击下方的Creat an account进到下一步。 选择Free方案，下方的两个选项可选可不选，点击Continue继续 然后选择Skip this step完成Github的注册。此时Github会给你注册时填写的邮箱发送一封验证邮件，完成邮箱验证后才可以创建仓库。 完成验证后，依次点击1，2处，在新页面点击NEW按钮。或者直接点击3处进行仓库创建。 填入必要的信息，这里的仓库名必须要填&lt;用户名&gt;.github.io例如，图示我注册的账户名为creataccount2，仓库名就需要填写creataccount2.github.io。填写必要的描述，也可不填。勾选Initialize this repository with a README点击Creat repository进行创建。 依次点击1，2新建一个文件。 文件名为index.html，内容随意。点击Commit new file进行创建。 打开&lt;用户名&gt;.github.io 一个简单的网页，内容就是刚才我们输入的内容。 至此，Github Pages已经创建完成了。后续我们将利用Hexo博客框架对Github Pages的内容进行进一步的丰富。]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>Github Pages</tag>
      </tags>
  </entry>
</search>
